// Code generated by protoc-gen-go.
// source: DownstreamService.proto
// DO NOT EDIT!

package org_glowroot_wire_api_model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MBeanDumpRequest_MBeanDumpKind int32

const (
	MBeanDumpRequest_ALL_MBEANS_INCLUDE_ATTRIBUTES          MBeanDumpRequest_MBeanDumpKind = 0
	MBeanDumpRequest_ALL_MBEANS_INCLUDE_ATTRIBUTES_FOR_SOME MBeanDumpRequest_MBeanDumpKind = 1
	MBeanDumpRequest_SOME_MBEANS_INCLUDE_ATTRIBUTES         MBeanDumpRequest_MBeanDumpKind = 2
)

var MBeanDumpRequest_MBeanDumpKind_name = map[int32]string{
	0: "ALL_MBEANS_INCLUDE_ATTRIBUTES",
	1: "ALL_MBEANS_INCLUDE_ATTRIBUTES_FOR_SOME",
	2: "SOME_MBEANS_INCLUDE_ATTRIBUTES",
}
var MBeanDumpRequest_MBeanDumpKind_value = map[string]int32{
	"ALL_MBEANS_INCLUDE_ATTRIBUTES":          0,
	"ALL_MBEANS_INCLUDE_ATTRIBUTES_FOR_SOME": 1,
	"SOME_MBEANS_INCLUDE_ATTRIBUTES":         2,
}

func (x MBeanDumpRequest_MBeanDumpKind) String() string {
	return proto.EnumName(MBeanDumpRequest_MBeanDumpKind_name, int32(x))
}
func (MBeanDumpRequest_MBeanDumpKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{18, 0}
}

type CentralRequest struct {
	RequestId int64 `protobuf:"varint,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Message:
	//	*CentralRequest_HelloAck
	//	*CentralRequest_AgentConfigUpdateRequest
	//	*CentralRequest_ThreadDumpRequest
	//	*CentralRequest_JstackRequest
	//	*CentralRequest_AvailableDiskSpaceRequest
	//	*CentralRequest_HeapDumpRequest
	//	*CentralRequest_HeapHistogramRequest
	//	*CentralRequest_GcRequest
	//	*CentralRequest_MbeanDumpRequest
	//	*CentralRequest_MatchingMbeanObjectNamesRequest
	//	*CentralRequest_MbeanMetaRequest
	//	*CentralRequest_SystemPropertiesRequest
	//	*CentralRequest_CapabilitiesRequest
	//	*CentralRequest_GlobalMetaRequest
	//	*CentralRequest_PreloadClasspathCacheRequest
	//	*CentralRequest_MatchingClassNamesRequest
	//	*CentralRequest_MatchingMethodNamesRequest
	//	*CentralRequest_MethodSignaturesRequest
	//	*CentralRequest_ReweaveRequest
	//	*CentralRequest_HeaderRequest
	//	*CentralRequest_EntriesRequest
	//	*CentralRequest_MainThreadProfileRequest
	//	*CentralRequest_AuxThreadProfileRequest
	//	*CentralRequest_FullTraceRequest
	Message isCentralRequest_Message `protobuf_oneof:"message"`
}

func (m *CentralRequest) Reset()                    { *m = CentralRequest{} }
func (m *CentralRequest) String() string            { return proto.CompactTextString(m) }
func (*CentralRequest) ProtoMessage()               {}
func (*CentralRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type isCentralRequest_Message interface {
	isCentralRequest_Message()
}

type CentralRequest_HelloAck struct {
	HelloAck *HelloAck `protobuf:"bytes,100,opt,name=hello_ack,json=helloAck,oneof"`
}
type CentralRequest_AgentConfigUpdateRequest struct {
	AgentConfigUpdateRequest *AgentConfigUpdateRequest `protobuf:"bytes,200,opt,name=agent_config_update_request,json=agentConfigUpdateRequest,oneof"`
}
type CentralRequest_ThreadDumpRequest struct {
	ThreadDumpRequest *ThreadDumpRequest `protobuf:"bytes,300,opt,name=thread_dump_request,json=threadDumpRequest,oneof"`
}
type CentralRequest_JstackRequest struct {
	JstackRequest *JstackRequest `protobuf:"bytes,308,opt,name=jstack_request,json=jstackRequest,oneof"`
}
type CentralRequest_AvailableDiskSpaceRequest struct {
	AvailableDiskSpaceRequest *AvailableDiskSpaceRequest `protobuf:"bytes,301,opt,name=available_disk_space_request,json=availableDiskSpaceRequest,oneof"`
}
type CentralRequest_HeapDumpRequest struct {
	HeapDumpRequest *HeapDumpRequest `protobuf:"bytes,302,opt,name=heap_dump_request,json=heapDumpRequest,oneof"`
}
type CentralRequest_HeapHistogramRequest struct {
	HeapHistogramRequest *HeapHistogramRequest `protobuf:"bytes,309,opt,name=heap_histogram_request,json=heapHistogramRequest,oneof"`
}
type CentralRequest_GcRequest struct {
	GcRequest *GcRequest `protobuf:"bytes,303,opt,name=gc_request,json=gcRequest,oneof"`
}
type CentralRequest_MbeanDumpRequest struct {
	MbeanDumpRequest *MBeanDumpRequest `protobuf:"bytes,304,opt,name=mbean_dump_request,json=mbeanDumpRequest,oneof"`
}
type CentralRequest_MatchingMbeanObjectNamesRequest struct {
	MatchingMbeanObjectNamesRequest *MatchingMBeanObjectNamesRequest `protobuf:"bytes,305,opt,name=matching_mbean_object_names_request,json=matchingMbeanObjectNamesRequest,oneof"`
}
type CentralRequest_MbeanMetaRequest struct {
	MbeanMetaRequest *MBeanMetaRequest `protobuf:"bytes,306,opt,name=mbean_meta_request,json=mbeanMetaRequest,oneof"`
}
type CentralRequest_SystemPropertiesRequest struct {
	SystemPropertiesRequest *SystemPropertiesRequest `protobuf:"bytes,310,opt,name=system_properties_request,json=systemPropertiesRequest,oneof"`
}
type CentralRequest_CapabilitiesRequest struct {
	CapabilitiesRequest *CapabilitiesRequest `protobuf:"bytes,307,opt,name=capabilities_request,json=capabilitiesRequest,oneof"`
}
type CentralRequest_GlobalMetaRequest struct {
	GlobalMetaRequest *GlobalMetaRequest `protobuf:"bytes,400,opt,name=global_meta_request,json=globalMetaRequest,oneof"`
}
type CentralRequest_PreloadClasspathCacheRequest struct {
	PreloadClasspathCacheRequest *PreloadClasspathCacheRequest `protobuf:"bytes,401,opt,name=preload_classpath_cache_request,json=preloadClasspathCacheRequest,oneof"`
}
type CentralRequest_MatchingClassNamesRequest struct {
	MatchingClassNamesRequest *MatchingClassNamesRequest `protobuf:"bytes,402,opt,name=matching_class_names_request,json=matchingClassNamesRequest,oneof"`
}
type CentralRequest_MatchingMethodNamesRequest struct {
	MatchingMethodNamesRequest *MatchingMethodNamesRequest `protobuf:"bytes,403,opt,name=matching_method_names_request,json=matchingMethodNamesRequest,oneof"`
}
type CentralRequest_MethodSignaturesRequest struct {
	MethodSignaturesRequest *MethodSignaturesRequest `protobuf:"bytes,404,opt,name=method_signatures_request,json=methodSignaturesRequest,oneof"`
}
type CentralRequest_ReweaveRequest struct {
	ReweaveRequest *ReweaveRequest `protobuf:"bytes,405,opt,name=reweave_request,json=reweaveRequest,oneof"`
}
type CentralRequest_HeaderRequest struct {
	HeaderRequest *HeaderRequest `protobuf:"bytes,500,opt,name=header_request,json=headerRequest,oneof"`
}
type CentralRequest_EntriesRequest struct {
	EntriesRequest *EntriesRequest `protobuf:"bytes,501,opt,name=entries_request,json=entriesRequest,oneof"`
}
type CentralRequest_MainThreadProfileRequest struct {
	MainThreadProfileRequest *MainThreadProfileRequest `protobuf:"bytes,502,opt,name=main_thread_profile_request,json=mainThreadProfileRequest,oneof"`
}
type CentralRequest_AuxThreadProfileRequest struct {
	AuxThreadProfileRequest *AuxThreadProfileRequest `protobuf:"bytes,503,opt,name=aux_thread_profile_request,json=auxThreadProfileRequest,oneof"`
}
type CentralRequest_FullTraceRequest struct {
	FullTraceRequest *FullTraceRequest `protobuf:"bytes,504,opt,name=full_trace_request,json=fullTraceRequest,oneof"`
}

func (*CentralRequest_HelloAck) isCentralRequest_Message()                        {}
func (*CentralRequest_AgentConfigUpdateRequest) isCentralRequest_Message()        {}
func (*CentralRequest_ThreadDumpRequest) isCentralRequest_Message()               {}
func (*CentralRequest_JstackRequest) isCentralRequest_Message()                   {}
func (*CentralRequest_AvailableDiskSpaceRequest) isCentralRequest_Message()       {}
func (*CentralRequest_HeapDumpRequest) isCentralRequest_Message()                 {}
func (*CentralRequest_HeapHistogramRequest) isCentralRequest_Message()            {}
func (*CentralRequest_GcRequest) isCentralRequest_Message()                       {}
func (*CentralRequest_MbeanDumpRequest) isCentralRequest_Message()                {}
func (*CentralRequest_MatchingMbeanObjectNamesRequest) isCentralRequest_Message() {}
func (*CentralRequest_MbeanMetaRequest) isCentralRequest_Message()                {}
func (*CentralRequest_SystemPropertiesRequest) isCentralRequest_Message()         {}
func (*CentralRequest_CapabilitiesRequest) isCentralRequest_Message()             {}
func (*CentralRequest_GlobalMetaRequest) isCentralRequest_Message()               {}
func (*CentralRequest_PreloadClasspathCacheRequest) isCentralRequest_Message()    {}
func (*CentralRequest_MatchingClassNamesRequest) isCentralRequest_Message()       {}
func (*CentralRequest_MatchingMethodNamesRequest) isCentralRequest_Message()      {}
func (*CentralRequest_MethodSignaturesRequest) isCentralRequest_Message()         {}
func (*CentralRequest_ReweaveRequest) isCentralRequest_Message()                  {}
func (*CentralRequest_HeaderRequest) isCentralRequest_Message()                   {}
func (*CentralRequest_EntriesRequest) isCentralRequest_Message()                  {}
func (*CentralRequest_MainThreadProfileRequest) isCentralRequest_Message()        {}
func (*CentralRequest_AuxThreadProfileRequest) isCentralRequest_Message()         {}
func (*CentralRequest_FullTraceRequest) isCentralRequest_Message()                {}

func (m *CentralRequest) GetMessage() isCentralRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *CentralRequest) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *CentralRequest) GetHelloAck() *HelloAck {
	if x, ok := m.GetMessage().(*CentralRequest_HelloAck); ok {
		return x.HelloAck
	}
	return nil
}

func (m *CentralRequest) GetAgentConfigUpdateRequest() *AgentConfigUpdateRequest {
	if x, ok := m.GetMessage().(*CentralRequest_AgentConfigUpdateRequest); ok {
		return x.AgentConfigUpdateRequest
	}
	return nil
}

func (m *CentralRequest) GetThreadDumpRequest() *ThreadDumpRequest {
	if x, ok := m.GetMessage().(*CentralRequest_ThreadDumpRequest); ok {
		return x.ThreadDumpRequest
	}
	return nil
}

func (m *CentralRequest) GetJstackRequest() *JstackRequest {
	if x, ok := m.GetMessage().(*CentralRequest_JstackRequest); ok {
		return x.JstackRequest
	}
	return nil
}

func (m *CentralRequest) GetAvailableDiskSpaceRequest() *AvailableDiskSpaceRequest {
	if x, ok := m.GetMessage().(*CentralRequest_AvailableDiskSpaceRequest); ok {
		return x.AvailableDiskSpaceRequest
	}
	return nil
}

func (m *CentralRequest) GetHeapDumpRequest() *HeapDumpRequest {
	if x, ok := m.GetMessage().(*CentralRequest_HeapDumpRequest); ok {
		return x.HeapDumpRequest
	}
	return nil
}

func (m *CentralRequest) GetHeapHistogramRequest() *HeapHistogramRequest {
	if x, ok := m.GetMessage().(*CentralRequest_HeapHistogramRequest); ok {
		return x.HeapHistogramRequest
	}
	return nil
}

func (m *CentralRequest) GetGcRequest() *GcRequest {
	if x, ok := m.GetMessage().(*CentralRequest_GcRequest); ok {
		return x.GcRequest
	}
	return nil
}

func (m *CentralRequest) GetMbeanDumpRequest() *MBeanDumpRequest {
	if x, ok := m.GetMessage().(*CentralRequest_MbeanDumpRequest); ok {
		return x.MbeanDumpRequest
	}
	return nil
}

func (m *CentralRequest) GetMatchingMbeanObjectNamesRequest() *MatchingMBeanObjectNamesRequest {
	if x, ok := m.GetMessage().(*CentralRequest_MatchingMbeanObjectNamesRequest); ok {
		return x.MatchingMbeanObjectNamesRequest
	}
	return nil
}

func (m *CentralRequest) GetMbeanMetaRequest() *MBeanMetaRequest {
	if x, ok := m.GetMessage().(*CentralRequest_MbeanMetaRequest); ok {
		return x.MbeanMetaRequest
	}
	return nil
}

func (m *CentralRequest) GetSystemPropertiesRequest() *SystemPropertiesRequest {
	if x, ok := m.GetMessage().(*CentralRequest_SystemPropertiesRequest); ok {
		return x.SystemPropertiesRequest
	}
	return nil
}

func (m *CentralRequest) GetCapabilitiesRequest() *CapabilitiesRequest {
	if x, ok := m.GetMessage().(*CentralRequest_CapabilitiesRequest); ok {
		return x.CapabilitiesRequest
	}
	return nil
}

func (m *CentralRequest) GetGlobalMetaRequest() *GlobalMetaRequest {
	if x, ok := m.GetMessage().(*CentralRequest_GlobalMetaRequest); ok {
		return x.GlobalMetaRequest
	}
	return nil
}

func (m *CentralRequest) GetPreloadClasspathCacheRequest() *PreloadClasspathCacheRequest {
	if x, ok := m.GetMessage().(*CentralRequest_PreloadClasspathCacheRequest); ok {
		return x.PreloadClasspathCacheRequest
	}
	return nil
}

func (m *CentralRequest) GetMatchingClassNamesRequest() *MatchingClassNamesRequest {
	if x, ok := m.GetMessage().(*CentralRequest_MatchingClassNamesRequest); ok {
		return x.MatchingClassNamesRequest
	}
	return nil
}

func (m *CentralRequest) GetMatchingMethodNamesRequest() *MatchingMethodNamesRequest {
	if x, ok := m.GetMessage().(*CentralRequest_MatchingMethodNamesRequest); ok {
		return x.MatchingMethodNamesRequest
	}
	return nil
}

func (m *CentralRequest) GetMethodSignaturesRequest() *MethodSignaturesRequest {
	if x, ok := m.GetMessage().(*CentralRequest_MethodSignaturesRequest); ok {
		return x.MethodSignaturesRequest
	}
	return nil
}

func (m *CentralRequest) GetReweaveRequest() *ReweaveRequest {
	if x, ok := m.GetMessage().(*CentralRequest_ReweaveRequest); ok {
		return x.ReweaveRequest
	}
	return nil
}

func (m *CentralRequest) GetHeaderRequest() *HeaderRequest {
	if x, ok := m.GetMessage().(*CentralRequest_HeaderRequest); ok {
		return x.HeaderRequest
	}
	return nil
}

func (m *CentralRequest) GetEntriesRequest() *EntriesRequest {
	if x, ok := m.GetMessage().(*CentralRequest_EntriesRequest); ok {
		return x.EntriesRequest
	}
	return nil
}

func (m *CentralRequest) GetMainThreadProfileRequest() *MainThreadProfileRequest {
	if x, ok := m.GetMessage().(*CentralRequest_MainThreadProfileRequest); ok {
		return x.MainThreadProfileRequest
	}
	return nil
}

func (m *CentralRequest) GetAuxThreadProfileRequest() *AuxThreadProfileRequest {
	if x, ok := m.GetMessage().(*CentralRequest_AuxThreadProfileRequest); ok {
		return x.AuxThreadProfileRequest
	}
	return nil
}

func (m *CentralRequest) GetFullTraceRequest() *FullTraceRequest {
	if x, ok := m.GetMessage().(*CentralRequest_FullTraceRequest); ok {
		return x.FullTraceRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CentralRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CentralRequest_OneofMarshaler, _CentralRequest_OneofUnmarshaler, _CentralRequest_OneofSizer, []interface{}{
		(*CentralRequest_HelloAck)(nil),
		(*CentralRequest_AgentConfigUpdateRequest)(nil),
		(*CentralRequest_ThreadDumpRequest)(nil),
		(*CentralRequest_JstackRequest)(nil),
		(*CentralRequest_AvailableDiskSpaceRequest)(nil),
		(*CentralRequest_HeapDumpRequest)(nil),
		(*CentralRequest_HeapHistogramRequest)(nil),
		(*CentralRequest_GcRequest)(nil),
		(*CentralRequest_MbeanDumpRequest)(nil),
		(*CentralRequest_MatchingMbeanObjectNamesRequest)(nil),
		(*CentralRequest_MbeanMetaRequest)(nil),
		(*CentralRequest_SystemPropertiesRequest)(nil),
		(*CentralRequest_CapabilitiesRequest)(nil),
		(*CentralRequest_GlobalMetaRequest)(nil),
		(*CentralRequest_PreloadClasspathCacheRequest)(nil),
		(*CentralRequest_MatchingClassNamesRequest)(nil),
		(*CentralRequest_MatchingMethodNamesRequest)(nil),
		(*CentralRequest_MethodSignaturesRequest)(nil),
		(*CentralRequest_ReweaveRequest)(nil),
		(*CentralRequest_HeaderRequest)(nil),
		(*CentralRequest_EntriesRequest)(nil),
		(*CentralRequest_MainThreadProfileRequest)(nil),
		(*CentralRequest_AuxThreadProfileRequest)(nil),
		(*CentralRequest_FullTraceRequest)(nil),
	}
}

func _CentralRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CentralRequest)
	// message
	switch x := m.Message.(type) {
	case *CentralRequest_HelloAck:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HelloAck); err != nil {
			return err
		}
	case *CentralRequest_AgentConfigUpdateRequest:
		b.EncodeVarint(200<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AgentConfigUpdateRequest); err != nil {
			return err
		}
	case *CentralRequest_ThreadDumpRequest:
		b.EncodeVarint(300<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ThreadDumpRequest); err != nil {
			return err
		}
	case *CentralRequest_JstackRequest:
		b.EncodeVarint(308<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JstackRequest); err != nil {
			return err
		}
	case *CentralRequest_AvailableDiskSpaceRequest:
		b.EncodeVarint(301<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AvailableDiskSpaceRequest); err != nil {
			return err
		}
	case *CentralRequest_HeapDumpRequest:
		b.EncodeVarint(302<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeapDumpRequest); err != nil {
			return err
		}
	case *CentralRequest_HeapHistogramRequest:
		b.EncodeVarint(309<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeapHistogramRequest); err != nil {
			return err
		}
	case *CentralRequest_GcRequest:
		b.EncodeVarint(303<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GcRequest); err != nil {
			return err
		}
	case *CentralRequest_MbeanDumpRequest:
		b.EncodeVarint(304<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MbeanDumpRequest); err != nil {
			return err
		}
	case *CentralRequest_MatchingMbeanObjectNamesRequest:
		b.EncodeVarint(305<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MatchingMbeanObjectNamesRequest); err != nil {
			return err
		}
	case *CentralRequest_MbeanMetaRequest:
		b.EncodeVarint(306<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MbeanMetaRequest); err != nil {
			return err
		}
	case *CentralRequest_SystemPropertiesRequest:
		b.EncodeVarint(310<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SystemPropertiesRequest); err != nil {
			return err
		}
	case *CentralRequest_CapabilitiesRequest:
		b.EncodeVarint(307<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CapabilitiesRequest); err != nil {
			return err
		}
	case *CentralRequest_GlobalMetaRequest:
		b.EncodeVarint(400<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobalMetaRequest); err != nil {
			return err
		}
	case *CentralRequest_PreloadClasspathCacheRequest:
		b.EncodeVarint(401<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PreloadClasspathCacheRequest); err != nil {
			return err
		}
	case *CentralRequest_MatchingClassNamesRequest:
		b.EncodeVarint(402<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MatchingClassNamesRequest); err != nil {
			return err
		}
	case *CentralRequest_MatchingMethodNamesRequest:
		b.EncodeVarint(403<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MatchingMethodNamesRequest); err != nil {
			return err
		}
	case *CentralRequest_MethodSignaturesRequest:
		b.EncodeVarint(404<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MethodSignaturesRequest); err != nil {
			return err
		}
	case *CentralRequest_ReweaveRequest:
		b.EncodeVarint(405<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReweaveRequest); err != nil {
			return err
		}
	case *CentralRequest_HeaderRequest:
		b.EncodeVarint(500<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeaderRequest); err != nil {
			return err
		}
	case *CentralRequest_EntriesRequest:
		b.EncodeVarint(501<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EntriesRequest); err != nil {
			return err
		}
	case *CentralRequest_MainThreadProfileRequest:
		b.EncodeVarint(502<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MainThreadProfileRequest); err != nil {
			return err
		}
	case *CentralRequest_AuxThreadProfileRequest:
		b.EncodeVarint(503<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AuxThreadProfileRequest); err != nil {
			return err
		}
	case *CentralRequest_FullTraceRequest:
		b.EncodeVarint(504<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FullTraceRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CentralRequest.Message has unexpected type %T", x)
	}
	return nil
}

func _CentralRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CentralRequest)
	switch tag {
	case 100: // message.hello_ack
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HelloAck)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_HelloAck{msg}
		return true, err
	case 200: // message.agent_config_update_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AgentConfigUpdateRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_AgentConfigUpdateRequest{msg}
		return true, err
	case 300: // message.thread_dump_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ThreadDumpRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_ThreadDumpRequest{msg}
		return true, err
	case 308: // message.jstack_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JstackRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_JstackRequest{msg}
		return true, err
	case 301: // message.available_disk_space_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AvailableDiskSpaceRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_AvailableDiskSpaceRequest{msg}
		return true, err
	case 302: // message.heap_dump_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeapDumpRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_HeapDumpRequest{msg}
		return true, err
	case 309: // message.heap_histogram_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeapHistogramRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_HeapHistogramRequest{msg}
		return true, err
	case 303: // message.gc_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GcRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_GcRequest{msg}
		return true, err
	case 304: // message.mbean_dump_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MBeanDumpRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_MbeanDumpRequest{msg}
		return true, err
	case 305: // message.matching_mbean_object_names_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MatchingMBeanObjectNamesRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_MatchingMbeanObjectNamesRequest{msg}
		return true, err
	case 306: // message.mbean_meta_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MBeanMetaRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_MbeanMetaRequest{msg}
		return true, err
	case 310: // message.system_properties_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SystemPropertiesRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_SystemPropertiesRequest{msg}
		return true, err
	case 307: // message.capabilities_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CapabilitiesRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_CapabilitiesRequest{msg}
		return true, err
	case 400: // message.global_meta_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GlobalMetaRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_GlobalMetaRequest{msg}
		return true, err
	case 401: // message.preload_classpath_cache_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PreloadClasspathCacheRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_PreloadClasspathCacheRequest{msg}
		return true, err
	case 402: // message.matching_class_names_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MatchingClassNamesRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_MatchingClassNamesRequest{msg}
		return true, err
	case 403: // message.matching_method_names_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MatchingMethodNamesRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_MatchingMethodNamesRequest{msg}
		return true, err
	case 404: // message.method_signatures_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MethodSignaturesRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_MethodSignaturesRequest{msg}
		return true, err
	case 405: // message.reweave_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReweaveRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_ReweaveRequest{msg}
		return true, err
	case 500: // message.header_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeaderRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_HeaderRequest{msg}
		return true, err
	case 501: // message.entries_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EntriesRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_EntriesRequest{msg}
		return true, err
	case 502: // message.main_thread_profile_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MainThreadProfileRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_MainThreadProfileRequest{msg}
		return true, err
	case 503: // message.aux_thread_profile_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AuxThreadProfileRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_AuxThreadProfileRequest{msg}
		return true, err
	case 504: // message.full_trace_request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FullTraceRequest)
		err := b.DecodeMessage(msg)
		m.Message = &CentralRequest_FullTraceRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CentralRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CentralRequest)
	// message
	switch x := m.Message.(type) {
	case *CentralRequest_HelloAck:
		s := proto.Size(x.HelloAck)
		n += proto.SizeVarint(100<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_AgentConfigUpdateRequest:
		s := proto.Size(x.AgentConfigUpdateRequest)
		n += proto.SizeVarint(200<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_ThreadDumpRequest:
		s := proto.Size(x.ThreadDumpRequest)
		n += proto.SizeVarint(300<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_JstackRequest:
		s := proto.Size(x.JstackRequest)
		n += proto.SizeVarint(308<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_AvailableDiskSpaceRequest:
		s := proto.Size(x.AvailableDiskSpaceRequest)
		n += proto.SizeVarint(301<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_HeapDumpRequest:
		s := proto.Size(x.HeapDumpRequest)
		n += proto.SizeVarint(302<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_HeapHistogramRequest:
		s := proto.Size(x.HeapHistogramRequest)
		n += proto.SizeVarint(309<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_GcRequest:
		s := proto.Size(x.GcRequest)
		n += proto.SizeVarint(303<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_MbeanDumpRequest:
		s := proto.Size(x.MbeanDumpRequest)
		n += proto.SizeVarint(304<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_MatchingMbeanObjectNamesRequest:
		s := proto.Size(x.MatchingMbeanObjectNamesRequest)
		n += proto.SizeVarint(305<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_MbeanMetaRequest:
		s := proto.Size(x.MbeanMetaRequest)
		n += proto.SizeVarint(306<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_SystemPropertiesRequest:
		s := proto.Size(x.SystemPropertiesRequest)
		n += proto.SizeVarint(310<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_CapabilitiesRequest:
		s := proto.Size(x.CapabilitiesRequest)
		n += proto.SizeVarint(307<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_GlobalMetaRequest:
		s := proto.Size(x.GlobalMetaRequest)
		n += proto.SizeVarint(400<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_PreloadClasspathCacheRequest:
		s := proto.Size(x.PreloadClasspathCacheRequest)
		n += proto.SizeVarint(401<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_MatchingClassNamesRequest:
		s := proto.Size(x.MatchingClassNamesRequest)
		n += proto.SizeVarint(402<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_MatchingMethodNamesRequest:
		s := proto.Size(x.MatchingMethodNamesRequest)
		n += proto.SizeVarint(403<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_MethodSignaturesRequest:
		s := proto.Size(x.MethodSignaturesRequest)
		n += proto.SizeVarint(404<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_ReweaveRequest:
		s := proto.Size(x.ReweaveRequest)
		n += proto.SizeVarint(405<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_HeaderRequest:
		s := proto.Size(x.HeaderRequest)
		n += proto.SizeVarint(500<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_EntriesRequest:
		s := proto.Size(x.EntriesRequest)
		n += proto.SizeVarint(501<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_MainThreadProfileRequest:
		s := proto.Size(x.MainThreadProfileRequest)
		n += proto.SizeVarint(502<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_AuxThreadProfileRequest:
		s := proto.Size(x.AuxThreadProfileRequest)
		n += proto.SizeVarint(503<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CentralRequest_FullTraceRequest:
		s := proto.Size(x.FullTraceRequest)
		n += proto.SizeVarint(504<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type AgentResponse struct {
	RequestId int64 `protobuf:"varint,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Message:
	//	*AgentResponse_Hello
	//	*AgentResponse_AgentConfigUpdateResponse
	//	*AgentResponse_ThreadDumpResponse
	//	*AgentResponse_JstackResponse
	//	*AgentResponse_AvailableDiskSpaceResponse
	//	*AgentResponse_HeapDumpResponse
	//	*AgentResponse_HeapHistogramResponse
	//	*AgentResponse_GcResponse
	//	*AgentResponse_MbeanDumpResponse
	//	*AgentResponse_MatchingMbeanObjectNamesResponse
	//	*AgentResponse_MbeanMetaResponse
	//	*AgentResponse_SystemPropertiesResponse
	//	*AgentResponse_CapabilitiesResponse
	//	*AgentResponse_GlobalMetaResponse
	//	*AgentResponse_PreloadClasspathCacheResponse
	//	*AgentResponse_MatchingClassNamesResponse
	//	*AgentResponse_MatchingMethodNamesResponse
	//	*AgentResponse_MethodSignaturesResponse
	//	*AgentResponse_ReweaveResponse
	//	*AgentResponse_HeaderResponse
	//	*AgentResponse_EntriesResponse
	//	*AgentResponse_MainThreadProfileResponse
	//	*AgentResponse_AuxThreadProfileResponse
	//	*AgentResponse_FullTraceResponse
	//	*AgentResponse_UnknownRequestResponse
	//	*AgentResponse_ExceptionResponse
	Message isAgentResponse_Message `protobuf_oneof:"message"`
}

func (m *AgentResponse) Reset()                    { *m = AgentResponse{} }
func (m *AgentResponse) String() string            { return proto.CompactTextString(m) }
func (*AgentResponse) ProtoMessage()               {}
func (*AgentResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type isAgentResponse_Message interface {
	isAgentResponse_Message()
}

type AgentResponse_Hello struct {
	Hello *Hello `protobuf:"bytes,100,opt,name=hello,oneof"`
}
type AgentResponse_AgentConfigUpdateResponse struct {
	AgentConfigUpdateResponse *AgentConfigUpdateResponse `protobuf:"bytes,200,opt,name=agent_config_update_response,json=agentConfigUpdateResponse,oneof"`
}
type AgentResponse_ThreadDumpResponse struct {
	ThreadDumpResponse *ThreadDumpResponse `protobuf:"bytes,300,opt,name=thread_dump_response,json=threadDumpResponse,oneof"`
}
type AgentResponse_JstackResponse struct {
	JstackResponse *JstackResponse `protobuf:"bytes,308,opt,name=jstack_response,json=jstackResponse,oneof"`
}
type AgentResponse_AvailableDiskSpaceResponse struct {
	AvailableDiskSpaceResponse *AvailableDiskSpaceResponse `protobuf:"bytes,301,opt,name=available_disk_space_response,json=availableDiskSpaceResponse,oneof"`
}
type AgentResponse_HeapDumpResponse struct {
	HeapDumpResponse *HeapDumpResponse `protobuf:"bytes,302,opt,name=heap_dump_response,json=heapDumpResponse,oneof"`
}
type AgentResponse_HeapHistogramResponse struct {
	HeapHistogramResponse *HeapHistogramResponse `protobuf:"bytes,309,opt,name=heap_histogram_response,json=heapHistogramResponse,oneof"`
}
type AgentResponse_GcResponse struct {
	GcResponse *GcResponse `protobuf:"bytes,303,opt,name=gc_response,json=gcResponse,oneof"`
}
type AgentResponse_MbeanDumpResponse struct {
	MbeanDumpResponse *MBeanDumpResponse `protobuf:"bytes,304,opt,name=mbean_dump_response,json=mbeanDumpResponse,oneof"`
}
type AgentResponse_MatchingMbeanObjectNamesResponse struct {
	MatchingMbeanObjectNamesResponse *MatchingMBeanObjectNamesResponse `protobuf:"bytes,305,opt,name=matching_mbean_object_names_response,json=matchingMbeanObjectNamesResponse,oneof"`
}
type AgentResponse_MbeanMetaResponse struct {
	MbeanMetaResponse *MBeanMetaResponse `protobuf:"bytes,306,opt,name=mbean_meta_response,json=mbeanMetaResponse,oneof"`
}
type AgentResponse_SystemPropertiesResponse struct {
	SystemPropertiesResponse *SystemPropertiesResponse `protobuf:"bytes,310,opt,name=system_properties_response,json=systemPropertiesResponse,oneof"`
}
type AgentResponse_CapabilitiesResponse struct {
	CapabilitiesResponse *CapabilitiesResponse `protobuf:"bytes,307,opt,name=capabilities_response,json=capabilitiesResponse,oneof"`
}
type AgentResponse_GlobalMetaResponse struct {
	GlobalMetaResponse *GlobalMetaResponse `protobuf:"bytes,400,opt,name=global_meta_response,json=globalMetaResponse,oneof"`
}
type AgentResponse_PreloadClasspathCacheResponse struct {
	PreloadClasspathCacheResponse *PreloadClasspathCacheResponse `protobuf:"bytes,401,opt,name=preload_classpath_cache_response,json=preloadClasspathCacheResponse,oneof"`
}
type AgentResponse_MatchingClassNamesResponse struct {
	MatchingClassNamesResponse *MatchingClassNamesResponse `protobuf:"bytes,402,opt,name=matching_class_names_response,json=matchingClassNamesResponse,oneof"`
}
type AgentResponse_MatchingMethodNamesResponse struct {
	MatchingMethodNamesResponse *MatchingMethodNamesResponse `protobuf:"bytes,403,opt,name=matching_method_names_response,json=matchingMethodNamesResponse,oneof"`
}
type AgentResponse_MethodSignaturesResponse struct {
	MethodSignaturesResponse *MethodSignaturesResponse `protobuf:"bytes,404,opt,name=method_signatures_response,json=methodSignaturesResponse,oneof"`
}
type AgentResponse_ReweaveResponse struct {
	ReweaveResponse *ReweaveResponse `protobuf:"bytes,405,opt,name=reweave_response,json=reweaveResponse,oneof"`
}
type AgentResponse_HeaderResponse struct {
	HeaderResponse *HeaderResponse `protobuf:"bytes,500,opt,name=header_response,json=headerResponse,oneof"`
}
type AgentResponse_EntriesResponse struct {
	EntriesResponse *EntriesResponse `protobuf:"bytes,501,opt,name=entries_response,json=entriesResponse,oneof"`
}
type AgentResponse_MainThreadProfileResponse struct {
	MainThreadProfileResponse *MainThreadProfileResponse `protobuf:"bytes,502,opt,name=main_thread_profile_response,json=mainThreadProfileResponse,oneof"`
}
type AgentResponse_AuxThreadProfileResponse struct {
	AuxThreadProfileResponse *AuxThreadProfileResponse `protobuf:"bytes,503,opt,name=aux_thread_profile_response,json=auxThreadProfileResponse,oneof"`
}
type AgentResponse_FullTraceResponse struct {
	FullTraceResponse *FullTraceResponse `protobuf:"bytes,504,opt,name=full_trace_response,json=fullTraceResponse,oneof"`
}
type AgentResponse_UnknownRequestResponse struct {
	UnknownRequestResponse *UnknownRequestResponse `protobuf:"bytes,10000,opt,name=unknown_request_response,json=unknownRequestResponse,oneof"`
}
type AgentResponse_ExceptionResponse struct {
	ExceptionResponse *ExceptionResponse `protobuf:"bytes,10001,opt,name=exception_response,json=exceptionResponse,oneof"`
}

func (*AgentResponse_Hello) isAgentResponse_Message()                            {}
func (*AgentResponse_AgentConfigUpdateResponse) isAgentResponse_Message()        {}
func (*AgentResponse_ThreadDumpResponse) isAgentResponse_Message()               {}
func (*AgentResponse_JstackResponse) isAgentResponse_Message()                   {}
func (*AgentResponse_AvailableDiskSpaceResponse) isAgentResponse_Message()       {}
func (*AgentResponse_HeapDumpResponse) isAgentResponse_Message()                 {}
func (*AgentResponse_HeapHistogramResponse) isAgentResponse_Message()            {}
func (*AgentResponse_GcResponse) isAgentResponse_Message()                       {}
func (*AgentResponse_MbeanDumpResponse) isAgentResponse_Message()                {}
func (*AgentResponse_MatchingMbeanObjectNamesResponse) isAgentResponse_Message() {}
func (*AgentResponse_MbeanMetaResponse) isAgentResponse_Message()                {}
func (*AgentResponse_SystemPropertiesResponse) isAgentResponse_Message()         {}
func (*AgentResponse_CapabilitiesResponse) isAgentResponse_Message()             {}
func (*AgentResponse_GlobalMetaResponse) isAgentResponse_Message()               {}
func (*AgentResponse_PreloadClasspathCacheResponse) isAgentResponse_Message()    {}
func (*AgentResponse_MatchingClassNamesResponse) isAgentResponse_Message()       {}
func (*AgentResponse_MatchingMethodNamesResponse) isAgentResponse_Message()      {}
func (*AgentResponse_MethodSignaturesResponse) isAgentResponse_Message()         {}
func (*AgentResponse_ReweaveResponse) isAgentResponse_Message()                  {}
func (*AgentResponse_HeaderResponse) isAgentResponse_Message()                   {}
func (*AgentResponse_EntriesResponse) isAgentResponse_Message()                  {}
func (*AgentResponse_MainThreadProfileResponse) isAgentResponse_Message()        {}
func (*AgentResponse_AuxThreadProfileResponse) isAgentResponse_Message()         {}
func (*AgentResponse_FullTraceResponse) isAgentResponse_Message()                {}
func (*AgentResponse_UnknownRequestResponse) isAgentResponse_Message()           {}
func (*AgentResponse_ExceptionResponse) isAgentResponse_Message()                {}

func (m *AgentResponse) GetMessage() isAgentResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *AgentResponse) GetRequestId() int64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *AgentResponse) GetHello() *Hello {
	if x, ok := m.GetMessage().(*AgentResponse_Hello); ok {
		return x.Hello
	}
	return nil
}

func (m *AgentResponse) GetAgentConfigUpdateResponse() *AgentConfigUpdateResponse {
	if x, ok := m.GetMessage().(*AgentResponse_AgentConfigUpdateResponse); ok {
		return x.AgentConfigUpdateResponse
	}
	return nil
}

func (m *AgentResponse) GetThreadDumpResponse() *ThreadDumpResponse {
	if x, ok := m.GetMessage().(*AgentResponse_ThreadDumpResponse); ok {
		return x.ThreadDumpResponse
	}
	return nil
}

func (m *AgentResponse) GetJstackResponse() *JstackResponse {
	if x, ok := m.GetMessage().(*AgentResponse_JstackResponse); ok {
		return x.JstackResponse
	}
	return nil
}

func (m *AgentResponse) GetAvailableDiskSpaceResponse() *AvailableDiskSpaceResponse {
	if x, ok := m.GetMessage().(*AgentResponse_AvailableDiskSpaceResponse); ok {
		return x.AvailableDiskSpaceResponse
	}
	return nil
}

func (m *AgentResponse) GetHeapDumpResponse() *HeapDumpResponse {
	if x, ok := m.GetMessage().(*AgentResponse_HeapDumpResponse); ok {
		return x.HeapDumpResponse
	}
	return nil
}

func (m *AgentResponse) GetHeapHistogramResponse() *HeapHistogramResponse {
	if x, ok := m.GetMessage().(*AgentResponse_HeapHistogramResponse); ok {
		return x.HeapHistogramResponse
	}
	return nil
}

func (m *AgentResponse) GetGcResponse() *GcResponse {
	if x, ok := m.GetMessage().(*AgentResponse_GcResponse); ok {
		return x.GcResponse
	}
	return nil
}

func (m *AgentResponse) GetMbeanDumpResponse() *MBeanDumpResponse {
	if x, ok := m.GetMessage().(*AgentResponse_MbeanDumpResponse); ok {
		return x.MbeanDumpResponse
	}
	return nil
}

func (m *AgentResponse) GetMatchingMbeanObjectNamesResponse() *MatchingMBeanObjectNamesResponse {
	if x, ok := m.GetMessage().(*AgentResponse_MatchingMbeanObjectNamesResponse); ok {
		return x.MatchingMbeanObjectNamesResponse
	}
	return nil
}

func (m *AgentResponse) GetMbeanMetaResponse() *MBeanMetaResponse {
	if x, ok := m.GetMessage().(*AgentResponse_MbeanMetaResponse); ok {
		return x.MbeanMetaResponse
	}
	return nil
}

func (m *AgentResponse) GetSystemPropertiesResponse() *SystemPropertiesResponse {
	if x, ok := m.GetMessage().(*AgentResponse_SystemPropertiesResponse); ok {
		return x.SystemPropertiesResponse
	}
	return nil
}

func (m *AgentResponse) GetCapabilitiesResponse() *CapabilitiesResponse {
	if x, ok := m.GetMessage().(*AgentResponse_CapabilitiesResponse); ok {
		return x.CapabilitiesResponse
	}
	return nil
}

func (m *AgentResponse) GetGlobalMetaResponse() *GlobalMetaResponse {
	if x, ok := m.GetMessage().(*AgentResponse_GlobalMetaResponse); ok {
		return x.GlobalMetaResponse
	}
	return nil
}

func (m *AgentResponse) GetPreloadClasspathCacheResponse() *PreloadClasspathCacheResponse {
	if x, ok := m.GetMessage().(*AgentResponse_PreloadClasspathCacheResponse); ok {
		return x.PreloadClasspathCacheResponse
	}
	return nil
}

func (m *AgentResponse) GetMatchingClassNamesResponse() *MatchingClassNamesResponse {
	if x, ok := m.GetMessage().(*AgentResponse_MatchingClassNamesResponse); ok {
		return x.MatchingClassNamesResponse
	}
	return nil
}

func (m *AgentResponse) GetMatchingMethodNamesResponse() *MatchingMethodNamesResponse {
	if x, ok := m.GetMessage().(*AgentResponse_MatchingMethodNamesResponse); ok {
		return x.MatchingMethodNamesResponse
	}
	return nil
}

func (m *AgentResponse) GetMethodSignaturesResponse() *MethodSignaturesResponse {
	if x, ok := m.GetMessage().(*AgentResponse_MethodSignaturesResponse); ok {
		return x.MethodSignaturesResponse
	}
	return nil
}

func (m *AgentResponse) GetReweaveResponse() *ReweaveResponse {
	if x, ok := m.GetMessage().(*AgentResponse_ReweaveResponse); ok {
		return x.ReweaveResponse
	}
	return nil
}

func (m *AgentResponse) GetHeaderResponse() *HeaderResponse {
	if x, ok := m.GetMessage().(*AgentResponse_HeaderResponse); ok {
		return x.HeaderResponse
	}
	return nil
}

func (m *AgentResponse) GetEntriesResponse() *EntriesResponse {
	if x, ok := m.GetMessage().(*AgentResponse_EntriesResponse); ok {
		return x.EntriesResponse
	}
	return nil
}

func (m *AgentResponse) GetMainThreadProfileResponse() *MainThreadProfileResponse {
	if x, ok := m.GetMessage().(*AgentResponse_MainThreadProfileResponse); ok {
		return x.MainThreadProfileResponse
	}
	return nil
}

func (m *AgentResponse) GetAuxThreadProfileResponse() *AuxThreadProfileResponse {
	if x, ok := m.GetMessage().(*AgentResponse_AuxThreadProfileResponse); ok {
		return x.AuxThreadProfileResponse
	}
	return nil
}

func (m *AgentResponse) GetFullTraceResponse() *FullTraceResponse {
	if x, ok := m.GetMessage().(*AgentResponse_FullTraceResponse); ok {
		return x.FullTraceResponse
	}
	return nil
}

func (m *AgentResponse) GetUnknownRequestResponse() *UnknownRequestResponse {
	if x, ok := m.GetMessage().(*AgentResponse_UnknownRequestResponse); ok {
		return x.UnknownRequestResponse
	}
	return nil
}

func (m *AgentResponse) GetExceptionResponse() *ExceptionResponse {
	if x, ok := m.GetMessage().(*AgentResponse_ExceptionResponse); ok {
		return x.ExceptionResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AgentResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AgentResponse_OneofMarshaler, _AgentResponse_OneofUnmarshaler, _AgentResponse_OneofSizer, []interface{}{
		(*AgentResponse_Hello)(nil),
		(*AgentResponse_AgentConfigUpdateResponse)(nil),
		(*AgentResponse_ThreadDumpResponse)(nil),
		(*AgentResponse_JstackResponse)(nil),
		(*AgentResponse_AvailableDiskSpaceResponse)(nil),
		(*AgentResponse_HeapDumpResponse)(nil),
		(*AgentResponse_HeapHistogramResponse)(nil),
		(*AgentResponse_GcResponse)(nil),
		(*AgentResponse_MbeanDumpResponse)(nil),
		(*AgentResponse_MatchingMbeanObjectNamesResponse)(nil),
		(*AgentResponse_MbeanMetaResponse)(nil),
		(*AgentResponse_SystemPropertiesResponse)(nil),
		(*AgentResponse_CapabilitiesResponse)(nil),
		(*AgentResponse_GlobalMetaResponse)(nil),
		(*AgentResponse_PreloadClasspathCacheResponse)(nil),
		(*AgentResponse_MatchingClassNamesResponse)(nil),
		(*AgentResponse_MatchingMethodNamesResponse)(nil),
		(*AgentResponse_MethodSignaturesResponse)(nil),
		(*AgentResponse_ReweaveResponse)(nil),
		(*AgentResponse_HeaderResponse)(nil),
		(*AgentResponse_EntriesResponse)(nil),
		(*AgentResponse_MainThreadProfileResponse)(nil),
		(*AgentResponse_AuxThreadProfileResponse)(nil),
		(*AgentResponse_FullTraceResponse)(nil),
		(*AgentResponse_UnknownRequestResponse)(nil),
		(*AgentResponse_ExceptionResponse)(nil),
	}
}

func _AgentResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AgentResponse)
	// message
	switch x := m.Message.(type) {
	case *AgentResponse_Hello:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hello); err != nil {
			return err
		}
	case *AgentResponse_AgentConfigUpdateResponse:
		b.EncodeVarint(200<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AgentConfigUpdateResponse); err != nil {
			return err
		}
	case *AgentResponse_ThreadDumpResponse:
		b.EncodeVarint(300<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ThreadDumpResponse); err != nil {
			return err
		}
	case *AgentResponse_JstackResponse:
		b.EncodeVarint(308<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.JstackResponse); err != nil {
			return err
		}
	case *AgentResponse_AvailableDiskSpaceResponse:
		b.EncodeVarint(301<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AvailableDiskSpaceResponse); err != nil {
			return err
		}
	case *AgentResponse_HeapDumpResponse:
		b.EncodeVarint(302<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeapDumpResponse); err != nil {
			return err
		}
	case *AgentResponse_HeapHistogramResponse:
		b.EncodeVarint(309<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeapHistogramResponse); err != nil {
			return err
		}
	case *AgentResponse_GcResponse:
		b.EncodeVarint(303<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GcResponse); err != nil {
			return err
		}
	case *AgentResponse_MbeanDumpResponse:
		b.EncodeVarint(304<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MbeanDumpResponse); err != nil {
			return err
		}
	case *AgentResponse_MatchingMbeanObjectNamesResponse:
		b.EncodeVarint(305<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MatchingMbeanObjectNamesResponse); err != nil {
			return err
		}
	case *AgentResponse_MbeanMetaResponse:
		b.EncodeVarint(306<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MbeanMetaResponse); err != nil {
			return err
		}
	case *AgentResponse_SystemPropertiesResponse:
		b.EncodeVarint(310<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SystemPropertiesResponse); err != nil {
			return err
		}
	case *AgentResponse_CapabilitiesResponse:
		b.EncodeVarint(307<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CapabilitiesResponse); err != nil {
			return err
		}
	case *AgentResponse_GlobalMetaResponse:
		b.EncodeVarint(400<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GlobalMetaResponse); err != nil {
			return err
		}
	case *AgentResponse_PreloadClasspathCacheResponse:
		b.EncodeVarint(401<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PreloadClasspathCacheResponse); err != nil {
			return err
		}
	case *AgentResponse_MatchingClassNamesResponse:
		b.EncodeVarint(402<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MatchingClassNamesResponse); err != nil {
			return err
		}
	case *AgentResponse_MatchingMethodNamesResponse:
		b.EncodeVarint(403<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MatchingMethodNamesResponse); err != nil {
			return err
		}
	case *AgentResponse_MethodSignaturesResponse:
		b.EncodeVarint(404<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MethodSignaturesResponse); err != nil {
			return err
		}
	case *AgentResponse_ReweaveResponse:
		b.EncodeVarint(405<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReweaveResponse); err != nil {
			return err
		}
	case *AgentResponse_HeaderResponse:
		b.EncodeVarint(500<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HeaderResponse); err != nil {
			return err
		}
	case *AgentResponse_EntriesResponse:
		b.EncodeVarint(501<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EntriesResponse); err != nil {
			return err
		}
	case *AgentResponse_MainThreadProfileResponse:
		b.EncodeVarint(502<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MainThreadProfileResponse); err != nil {
			return err
		}
	case *AgentResponse_AuxThreadProfileResponse:
		b.EncodeVarint(503<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AuxThreadProfileResponse); err != nil {
			return err
		}
	case *AgentResponse_FullTraceResponse:
		b.EncodeVarint(504<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FullTraceResponse); err != nil {
			return err
		}
	case *AgentResponse_UnknownRequestResponse:
		b.EncodeVarint(10000<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UnknownRequestResponse); err != nil {
			return err
		}
	case *AgentResponse_ExceptionResponse:
		b.EncodeVarint(10001<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ExceptionResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AgentResponse.Message has unexpected type %T", x)
	}
	return nil
}

func _AgentResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AgentResponse)
	switch tag {
	case 100: // message.hello
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Hello)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_Hello{msg}
		return true, err
	case 200: // message.agent_config_update_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AgentConfigUpdateResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_AgentConfigUpdateResponse{msg}
		return true, err
	case 300: // message.thread_dump_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ThreadDumpResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_ThreadDumpResponse{msg}
		return true, err
	case 308: // message.jstack_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(JstackResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_JstackResponse{msg}
		return true, err
	case 301: // message.available_disk_space_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AvailableDiskSpaceResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_AvailableDiskSpaceResponse{msg}
		return true, err
	case 302: // message.heap_dump_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeapDumpResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_HeapDumpResponse{msg}
		return true, err
	case 309: // message.heap_histogram_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeapHistogramResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_HeapHistogramResponse{msg}
		return true, err
	case 303: // message.gc_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GcResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_GcResponse{msg}
		return true, err
	case 304: // message.mbean_dump_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MBeanDumpResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_MbeanDumpResponse{msg}
		return true, err
	case 305: // message.matching_mbean_object_names_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MatchingMBeanObjectNamesResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_MatchingMbeanObjectNamesResponse{msg}
		return true, err
	case 306: // message.mbean_meta_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MBeanMetaResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_MbeanMetaResponse{msg}
		return true, err
	case 310: // message.system_properties_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SystemPropertiesResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_SystemPropertiesResponse{msg}
		return true, err
	case 307: // message.capabilities_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CapabilitiesResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_CapabilitiesResponse{msg}
		return true, err
	case 400: // message.global_meta_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GlobalMetaResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_GlobalMetaResponse{msg}
		return true, err
	case 401: // message.preload_classpath_cache_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PreloadClasspathCacheResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_PreloadClasspathCacheResponse{msg}
		return true, err
	case 402: // message.matching_class_names_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MatchingClassNamesResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_MatchingClassNamesResponse{msg}
		return true, err
	case 403: // message.matching_method_names_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MatchingMethodNamesResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_MatchingMethodNamesResponse{msg}
		return true, err
	case 404: // message.method_signatures_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MethodSignaturesResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_MethodSignaturesResponse{msg}
		return true, err
	case 405: // message.reweave_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReweaveResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_ReweaveResponse{msg}
		return true, err
	case 500: // message.header_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HeaderResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_HeaderResponse{msg}
		return true, err
	case 501: // message.entries_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EntriesResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_EntriesResponse{msg}
		return true, err
	case 502: // message.main_thread_profile_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MainThreadProfileResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_MainThreadProfileResponse{msg}
		return true, err
	case 503: // message.aux_thread_profile_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AuxThreadProfileResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_AuxThreadProfileResponse{msg}
		return true, err
	case 504: // message.full_trace_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FullTraceResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_FullTraceResponse{msg}
		return true, err
	case 10000: // message.unknown_request_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UnknownRequestResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_UnknownRequestResponse{msg}
		return true, err
	case 10001: // message.exception_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ExceptionResponse)
		err := b.DecodeMessage(msg)
		m.Message = &AgentResponse_ExceptionResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AgentResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AgentResponse)
	// message
	switch x := m.Message.(type) {
	case *AgentResponse_Hello:
		s := proto.Size(x.Hello)
		n += proto.SizeVarint(100<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_AgentConfigUpdateResponse:
		s := proto.Size(x.AgentConfigUpdateResponse)
		n += proto.SizeVarint(200<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_ThreadDumpResponse:
		s := proto.Size(x.ThreadDumpResponse)
		n += proto.SizeVarint(300<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_JstackResponse:
		s := proto.Size(x.JstackResponse)
		n += proto.SizeVarint(308<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_AvailableDiskSpaceResponse:
		s := proto.Size(x.AvailableDiskSpaceResponse)
		n += proto.SizeVarint(301<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_HeapDumpResponse:
		s := proto.Size(x.HeapDumpResponse)
		n += proto.SizeVarint(302<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_HeapHistogramResponse:
		s := proto.Size(x.HeapHistogramResponse)
		n += proto.SizeVarint(309<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_GcResponse:
		s := proto.Size(x.GcResponse)
		n += proto.SizeVarint(303<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_MbeanDumpResponse:
		s := proto.Size(x.MbeanDumpResponse)
		n += proto.SizeVarint(304<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_MatchingMbeanObjectNamesResponse:
		s := proto.Size(x.MatchingMbeanObjectNamesResponse)
		n += proto.SizeVarint(305<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_MbeanMetaResponse:
		s := proto.Size(x.MbeanMetaResponse)
		n += proto.SizeVarint(306<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_SystemPropertiesResponse:
		s := proto.Size(x.SystemPropertiesResponse)
		n += proto.SizeVarint(310<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_CapabilitiesResponse:
		s := proto.Size(x.CapabilitiesResponse)
		n += proto.SizeVarint(307<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_GlobalMetaResponse:
		s := proto.Size(x.GlobalMetaResponse)
		n += proto.SizeVarint(400<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_PreloadClasspathCacheResponse:
		s := proto.Size(x.PreloadClasspathCacheResponse)
		n += proto.SizeVarint(401<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_MatchingClassNamesResponse:
		s := proto.Size(x.MatchingClassNamesResponse)
		n += proto.SizeVarint(402<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_MatchingMethodNamesResponse:
		s := proto.Size(x.MatchingMethodNamesResponse)
		n += proto.SizeVarint(403<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_MethodSignaturesResponse:
		s := proto.Size(x.MethodSignaturesResponse)
		n += proto.SizeVarint(404<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_ReweaveResponse:
		s := proto.Size(x.ReweaveResponse)
		n += proto.SizeVarint(405<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_HeaderResponse:
		s := proto.Size(x.HeaderResponse)
		n += proto.SizeVarint(500<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_EntriesResponse:
		s := proto.Size(x.EntriesResponse)
		n += proto.SizeVarint(501<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_MainThreadProfileResponse:
		s := proto.Size(x.MainThreadProfileResponse)
		n += proto.SizeVarint(502<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_AuxThreadProfileResponse:
		s := proto.Size(x.AuxThreadProfileResponse)
		n += proto.SizeVarint(503<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_FullTraceResponse:
		s := proto.Size(x.FullTraceResponse)
		n += proto.SizeVarint(504<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_UnknownRequestResponse:
		s := proto.Size(x.UnknownRequestResponse)
		n += proto.SizeVarint(10000<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AgentResponse_ExceptionResponse:
		s := proto.Size(x.ExceptionResponse)
		n += proto.SizeVarint(10001<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Hello struct {
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId" json:"agent_id,omitempty"`
}

func (m *Hello) Reset()                    { *m = Hello{} }
func (m *Hello) String() string            { return proto.CompactTextString(m) }
func (*Hello) ProtoMessage()               {}
func (*Hello) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *Hello) GetAgentId() string {
	if m != nil {
		return m.AgentId
	}
	return ""
}

type HelloAck struct {
}

func (m *HelloAck) Reset()                    { *m = HelloAck{} }
func (m *HelloAck) String() string            { return proto.CompactTextString(m) }
func (*HelloAck) ProtoMessage()               {}
func (*HelloAck) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

type AgentConfigUpdateRequest struct {
	AgentConfig *AgentConfig `protobuf:"bytes,1,opt,name=agent_config,json=agentConfig" json:"agent_config,omitempty"`
}

func (m *AgentConfigUpdateRequest) Reset()                    { *m = AgentConfigUpdateRequest{} }
func (m *AgentConfigUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*AgentConfigUpdateRequest) ProtoMessage()               {}
func (*AgentConfigUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func (m *AgentConfigUpdateRequest) GetAgentConfig() *AgentConfig {
	if m != nil {
		return m.AgentConfig
	}
	return nil
}

type AgentConfigUpdateResponse struct {
}

func (m *AgentConfigUpdateResponse) Reset()                    { *m = AgentConfigUpdateResponse{} }
func (m *AgentConfigUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*AgentConfigUpdateResponse) ProtoMessage()               {}
func (*AgentConfigUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

type ThreadDumpRequest struct {
}

func (m *ThreadDumpRequest) Reset()                    { *m = ThreadDumpRequest{} }
func (m *ThreadDumpRequest) String() string            { return proto.CompactTextString(m) }
func (*ThreadDumpRequest) ProtoMessage()               {}
func (*ThreadDumpRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{6} }

type ThreadDumpResponse struct {
	ThreadDump *ThreadDump `protobuf:"bytes,1,opt,name=thread_dump,json=threadDump" json:"thread_dump,omitempty"`
}

func (m *ThreadDumpResponse) Reset()                    { *m = ThreadDumpResponse{} }
func (m *ThreadDumpResponse) String() string            { return proto.CompactTextString(m) }
func (*ThreadDumpResponse) ProtoMessage()               {}
func (*ThreadDumpResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{7} }

func (m *ThreadDumpResponse) GetThreadDump() *ThreadDump {
	if m != nil {
		return m.ThreadDump
	}
	return nil
}

type JstackRequest struct {
}

func (m *JstackRequest) Reset()                    { *m = JstackRequest{} }
func (m *JstackRequest) String() string            { return proto.CompactTextString(m) }
func (*JstackRequest) ProtoMessage()               {}
func (*JstackRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{8} }

type JstackResponse struct {
	Jstack                       string `protobuf:"bytes,1,opt,name=jstack" json:"jstack,omitempty"`
	UnavailableDueToRunningInJre bool   `protobuf:"varint,2,opt,name=unavailable_due_to_running_in_jre,json=unavailableDueToRunningInJre" json:"unavailable_due_to_running_in_jre,omitempty"`
}

func (m *JstackResponse) Reset()                    { *m = JstackResponse{} }
func (m *JstackResponse) String() string            { return proto.CompactTextString(m) }
func (*JstackResponse) ProtoMessage()               {}
func (*JstackResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{9} }

func (m *JstackResponse) GetJstack() string {
	if m != nil {
		return m.Jstack
	}
	return ""
}

func (m *JstackResponse) GetUnavailableDueToRunningInJre() bool {
	if m != nil {
		return m.UnavailableDueToRunningInJre
	}
	return false
}

type AvailableDiskSpaceRequest struct {
	Directory string `protobuf:"bytes,1,opt,name=directory" json:"directory,omitempty"`
}

func (m *AvailableDiskSpaceRequest) Reset()                    { *m = AvailableDiskSpaceRequest{} }
func (m *AvailableDiskSpaceRequest) String() string            { return proto.CompactTextString(m) }
func (*AvailableDiskSpaceRequest) ProtoMessage()               {}
func (*AvailableDiskSpaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{10} }

func (m *AvailableDiskSpaceRequest) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

type AvailableDiskSpaceResponse struct {
	AvailableBytes        int64 `protobuf:"varint,1,opt,name=available_bytes,json=availableBytes" json:"available_bytes,omitempty"`
	DirectoryDoesNotExist bool  `protobuf:"varint,2,opt,name=directory_does_not_exist,json=directoryDoesNotExist" json:"directory_does_not_exist,omitempty"`
}

func (m *AvailableDiskSpaceResponse) Reset()                    { *m = AvailableDiskSpaceResponse{} }
func (m *AvailableDiskSpaceResponse) String() string            { return proto.CompactTextString(m) }
func (*AvailableDiskSpaceResponse) ProtoMessage()               {}
func (*AvailableDiskSpaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{11} }

func (m *AvailableDiskSpaceResponse) GetAvailableBytes() int64 {
	if m != nil {
		return m.AvailableBytes
	}
	return 0
}

func (m *AvailableDiskSpaceResponse) GetDirectoryDoesNotExist() bool {
	if m != nil {
		return m.DirectoryDoesNotExist
	}
	return false
}

type HeapDumpRequest struct {
	Directory string `protobuf:"bytes,1,opt,name=directory" json:"directory,omitempty"`
}

func (m *HeapDumpRequest) Reset()                    { *m = HeapDumpRequest{} }
func (m *HeapDumpRequest) String() string            { return proto.CompactTextString(m) }
func (*HeapDumpRequest) ProtoMessage()               {}
func (*HeapDumpRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{12} }

func (m *HeapDumpRequest) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

type HeapDumpResponse struct {
	HeapDumpFileInfo      *HeapDumpFileInfo `protobuf:"bytes,1,opt,name=heap_dump_file_info,json=heapDumpFileInfo" json:"heap_dump_file_info,omitempty"`
	DirectoryDoesNotExist bool              `protobuf:"varint,2,opt,name=directory_does_not_exist,json=directoryDoesNotExist" json:"directory_does_not_exist,omitempty"`
}

func (m *HeapDumpResponse) Reset()                    { *m = HeapDumpResponse{} }
func (m *HeapDumpResponse) String() string            { return proto.CompactTextString(m) }
func (*HeapDumpResponse) ProtoMessage()               {}
func (*HeapDumpResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{13} }

func (m *HeapDumpResponse) GetHeapDumpFileInfo() *HeapDumpFileInfo {
	if m != nil {
		return m.HeapDumpFileInfo
	}
	return nil
}

func (m *HeapDumpResponse) GetDirectoryDoesNotExist() bool {
	if m != nil {
		return m.DirectoryDoesNotExist
	}
	return false
}

type HeapHistogramRequest struct {
}

func (m *HeapHistogramRequest) Reset()                    { *m = HeapHistogramRequest{} }
func (m *HeapHistogramRequest) String() string            { return proto.CompactTextString(m) }
func (*HeapHistogramRequest) ProtoMessage()               {}
func (*HeapHistogramRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{14} }

type HeapHistogramResponse struct {
	HeapHistogram                *HeapHistogram `protobuf:"bytes,1,opt,name=heap_histogram,json=heapHistogram" json:"heap_histogram,omitempty"`
	UnavailableDueToRunningInJre bool           `protobuf:"varint,2,opt,name=unavailable_due_to_running_in_jre,json=unavailableDueToRunningInJre" json:"unavailable_due_to_running_in_jre,omitempty"`
}

func (m *HeapHistogramResponse) Reset()                    { *m = HeapHistogramResponse{} }
func (m *HeapHistogramResponse) String() string            { return proto.CompactTextString(m) }
func (*HeapHistogramResponse) ProtoMessage()               {}
func (*HeapHistogramResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{15} }

func (m *HeapHistogramResponse) GetHeapHistogram() *HeapHistogram {
	if m != nil {
		return m.HeapHistogram
	}
	return nil
}

func (m *HeapHistogramResponse) GetUnavailableDueToRunningInJre() bool {
	if m != nil {
		return m.UnavailableDueToRunningInJre
	}
	return false
}

type GcRequest struct {
}

func (m *GcRequest) Reset()                    { *m = GcRequest{} }
func (m *GcRequest) String() string            { return proto.CompactTextString(m) }
func (*GcRequest) ProtoMessage()               {}
func (*GcRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{16} }

type GcResponse struct {
}

func (m *GcResponse) Reset()                    { *m = GcResponse{} }
func (m *GcResponse) String() string            { return proto.CompactTextString(m) }
func (*GcResponse) ProtoMessage()               {}
func (*GcResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{17} }

type MBeanDumpRequest struct {
	Kind       MBeanDumpRequest_MBeanDumpKind `protobuf:"varint,1,opt,name=kind,enum=org_glowroot_wire_api_model.MBeanDumpRequest_MBeanDumpKind" json:"kind,omitempty"`
	ObjectName []string                       `protobuf:"bytes,2,rep,name=object_name,json=objectName" json:"object_name,omitempty"`
}

func (m *MBeanDumpRequest) Reset()                    { *m = MBeanDumpRequest{} }
func (m *MBeanDumpRequest) String() string            { return proto.CompactTextString(m) }
func (*MBeanDumpRequest) ProtoMessage()               {}
func (*MBeanDumpRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{18} }

func (m *MBeanDumpRequest) GetKind() MBeanDumpRequest_MBeanDumpKind {
	if m != nil {
		return m.Kind
	}
	return MBeanDumpRequest_ALL_MBEANS_INCLUDE_ATTRIBUTES
}

func (m *MBeanDumpRequest) GetObjectName() []string {
	if m != nil {
		return m.ObjectName
	}
	return nil
}

type MBeanDumpResponse struct {
	MbeanDump *MBeanDump `protobuf:"bytes,1,opt,name=mbean_dump,json=mbeanDump" json:"mbean_dump,omitempty"`
}

func (m *MBeanDumpResponse) Reset()                    { *m = MBeanDumpResponse{} }
func (m *MBeanDumpResponse) String() string            { return proto.CompactTextString(m) }
func (*MBeanDumpResponse) ProtoMessage()               {}
func (*MBeanDumpResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{19} }

func (m *MBeanDumpResponse) GetMbeanDump() *MBeanDump {
	if m != nil {
		return m.MbeanDump
	}
	return nil
}

type MatchingMBeanObjectNamesRequest struct {
	PartialObjectName string `protobuf:"bytes,1,opt,name=partial_object_name,json=partialObjectName" json:"partial_object_name,omitempty"`
	Limit             int32  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *MatchingMBeanObjectNamesRequest) Reset()         { *m = MatchingMBeanObjectNamesRequest{} }
func (m *MatchingMBeanObjectNamesRequest) String() string { return proto.CompactTextString(m) }
func (*MatchingMBeanObjectNamesRequest) ProtoMessage()    {}
func (*MatchingMBeanObjectNamesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{20}
}

func (m *MatchingMBeanObjectNamesRequest) GetPartialObjectName() string {
	if m != nil {
		return m.PartialObjectName
	}
	return ""
}

func (m *MatchingMBeanObjectNamesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type MatchingMBeanObjectNamesResponse struct {
	ObjectName []string `protobuf:"bytes,1,rep,name=object_name,json=objectName" json:"object_name,omitempty"`
}

func (m *MatchingMBeanObjectNamesResponse) Reset()         { *m = MatchingMBeanObjectNamesResponse{} }
func (m *MatchingMBeanObjectNamesResponse) String() string { return proto.CompactTextString(m) }
func (*MatchingMBeanObjectNamesResponse) ProtoMessage()    {}
func (*MatchingMBeanObjectNamesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{21}
}

func (m *MatchingMBeanObjectNamesResponse) GetObjectName() []string {
	if m != nil {
		return m.ObjectName
	}
	return nil
}

type MBeanMetaRequest struct {
	ObjectName string `protobuf:"bytes,1,opt,name=object_name,json=objectName" json:"object_name,omitempty"`
}

func (m *MBeanMetaRequest) Reset()                    { *m = MBeanMetaRequest{} }
func (m *MBeanMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*MBeanMetaRequest) ProtoMessage()               {}
func (*MBeanMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{22} }

func (m *MBeanMetaRequest) GetObjectName() string {
	if m != nil {
		return m.ObjectName
	}
	return ""
}

type MBeanMetaResponse struct {
	MbeanMeta *MBeanMeta `protobuf:"bytes,1,opt,name=mbean_meta,json=mbeanMeta" json:"mbean_meta,omitempty"`
}

func (m *MBeanMetaResponse) Reset()                    { *m = MBeanMetaResponse{} }
func (m *MBeanMetaResponse) String() string            { return proto.CompactTextString(m) }
func (*MBeanMetaResponse) ProtoMessage()               {}
func (*MBeanMetaResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{23} }

func (m *MBeanMetaResponse) GetMbeanMeta() *MBeanMeta {
	if m != nil {
		return m.MbeanMeta
	}
	return nil
}

type SystemPropertiesRequest struct {
}

func (m *SystemPropertiesRequest) Reset()                    { *m = SystemPropertiesRequest{} }
func (m *SystemPropertiesRequest) String() string            { return proto.CompactTextString(m) }
func (*SystemPropertiesRequest) ProtoMessage()               {}
func (*SystemPropertiesRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{24} }

type SystemPropertiesResponse struct {
	SystemProperties map[string]string `protobuf:"bytes,1,rep,name=system_properties,json=systemProperties" json:"system_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *SystemPropertiesResponse) Reset()                    { *m = SystemPropertiesResponse{} }
func (m *SystemPropertiesResponse) String() string            { return proto.CompactTextString(m) }
func (*SystemPropertiesResponse) ProtoMessage()               {}
func (*SystemPropertiesResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{25} }

func (m *SystemPropertiesResponse) GetSystemProperties() map[string]string {
	if m != nil {
		return m.SystemProperties
	}
	return nil
}

type CapabilitiesRequest struct {
}

func (m *CapabilitiesRequest) Reset()                    { *m = CapabilitiesRequest{} }
func (m *CapabilitiesRequest) String() string            { return proto.CompactTextString(m) }
func (*CapabilitiesRequest) ProtoMessage()               {}
func (*CapabilitiesRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{26} }

type CapabilitiesResponse struct {
	Capabilities *Capabilities `protobuf:"bytes,1,opt,name=capabilities" json:"capabilities,omitempty"`
}

func (m *CapabilitiesResponse) Reset()                    { *m = CapabilitiesResponse{} }
func (m *CapabilitiesResponse) String() string            { return proto.CompactTextString(m) }
func (*CapabilitiesResponse) ProtoMessage()               {}
func (*CapabilitiesResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{27} }

func (m *CapabilitiesResponse) GetCapabilities() *Capabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

type GlobalMetaRequest struct {
}

func (m *GlobalMetaRequest) Reset()                    { *m = GlobalMetaRequest{} }
func (m *GlobalMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*GlobalMetaRequest) ProtoMessage()               {}
func (*GlobalMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{28} }

type GlobalMetaResponse struct {
	GlobalMeta *GlobalMeta `protobuf:"bytes,1,opt,name=global_meta,json=globalMeta" json:"global_meta,omitempty"`
}

func (m *GlobalMetaResponse) Reset()                    { *m = GlobalMetaResponse{} }
func (m *GlobalMetaResponse) String() string            { return proto.CompactTextString(m) }
func (*GlobalMetaResponse) ProtoMessage()               {}
func (*GlobalMetaResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{29} }

func (m *GlobalMetaResponse) GetGlobalMeta() *GlobalMeta {
	if m != nil {
		return m.GlobalMeta
	}
	return nil
}

type PreloadClasspathCacheRequest struct {
}

func (m *PreloadClasspathCacheRequest) Reset()                    { *m = PreloadClasspathCacheRequest{} }
func (m *PreloadClasspathCacheRequest) String() string            { return proto.CompactTextString(m) }
func (*PreloadClasspathCacheRequest) ProtoMessage()               {}
func (*PreloadClasspathCacheRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{30} }

type PreloadClasspathCacheResponse struct {
}

func (m *PreloadClasspathCacheResponse) Reset()                    { *m = PreloadClasspathCacheResponse{} }
func (m *PreloadClasspathCacheResponse) String() string            { return proto.CompactTextString(m) }
func (*PreloadClasspathCacheResponse) ProtoMessage()               {}
func (*PreloadClasspathCacheResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{31} }

type MatchingClassNamesRequest struct {
	PartialClassName string `protobuf:"bytes,1,opt,name=partial_class_name,json=partialClassName" json:"partial_class_name,omitempty"`
	Limit            int32  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *MatchingClassNamesRequest) Reset()                    { *m = MatchingClassNamesRequest{} }
func (m *MatchingClassNamesRequest) String() string            { return proto.CompactTextString(m) }
func (*MatchingClassNamesRequest) ProtoMessage()               {}
func (*MatchingClassNamesRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{32} }

func (m *MatchingClassNamesRequest) GetPartialClassName() string {
	if m != nil {
		return m.PartialClassName
	}
	return ""
}

func (m *MatchingClassNamesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type MatchingClassNamesResponse struct {
	ClassName []string `protobuf:"bytes,1,rep,name=class_name,json=className" json:"class_name,omitempty"`
}

func (m *MatchingClassNamesResponse) Reset()                    { *m = MatchingClassNamesResponse{} }
func (m *MatchingClassNamesResponse) String() string            { return proto.CompactTextString(m) }
func (*MatchingClassNamesResponse) ProtoMessage()               {}
func (*MatchingClassNamesResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{33} }

func (m *MatchingClassNamesResponse) GetClassName() []string {
	if m != nil {
		return m.ClassName
	}
	return nil
}

type MatchingMethodNamesRequest struct {
	ClassName         string `protobuf:"bytes,1,opt,name=class_name,json=className" json:"class_name,omitempty"`
	PartialMethodName string `protobuf:"bytes,2,opt,name=partial_method_name,json=partialMethodName" json:"partial_method_name,omitempty"`
	Limit             int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *MatchingMethodNamesRequest) Reset()                    { *m = MatchingMethodNamesRequest{} }
func (m *MatchingMethodNamesRequest) String() string            { return proto.CompactTextString(m) }
func (*MatchingMethodNamesRequest) ProtoMessage()               {}
func (*MatchingMethodNamesRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{34} }

func (m *MatchingMethodNamesRequest) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *MatchingMethodNamesRequest) GetPartialMethodName() string {
	if m != nil {
		return m.PartialMethodName
	}
	return ""
}

func (m *MatchingMethodNamesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type MatchingMethodNamesResponse struct {
	MethodName []string `protobuf:"bytes,1,rep,name=method_name,json=methodName" json:"method_name,omitempty"`
}

func (m *MatchingMethodNamesResponse) Reset()                    { *m = MatchingMethodNamesResponse{} }
func (m *MatchingMethodNamesResponse) String() string            { return proto.CompactTextString(m) }
func (*MatchingMethodNamesResponse) ProtoMessage()               {}
func (*MatchingMethodNamesResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{35} }

func (m *MatchingMethodNamesResponse) GetMethodName() []string {
	if m != nil {
		return m.MethodName
	}
	return nil
}

type MethodSignaturesRequest struct {
	ClassName  string `protobuf:"bytes,1,opt,name=class_name,json=className" json:"class_name,omitempty"`
	MethodName string `protobuf:"bytes,2,opt,name=method_name,json=methodName" json:"method_name,omitempty"`
}

func (m *MethodSignaturesRequest) Reset()                    { *m = MethodSignaturesRequest{} }
func (m *MethodSignaturesRequest) String() string            { return proto.CompactTextString(m) }
func (*MethodSignaturesRequest) ProtoMessage()               {}
func (*MethodSignaturesRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{36} }

func (m *MethodSignaturesRequest) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *MethodSignaturesRequest) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

type MethodSignaturesResponse struct {
	MethodSignature []*MethodSignature `protobuf:"bytes,1,rep,name=method_signature,json=methodSignature" json:"method_signature,omitempty"`
}

func (m *MethodSignaturesResponse) Reset()                    { *m = MethodSignaturesResponse{} }
func (m *MethodSignaturesResponse) String() string            { return proto.CompactTextString(m) }
func (*MethodSignaturesResponse) ProtoMessage()               {}
func (*MethodSignaturesResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{37} }

func (m *MethodSignaturesResponse) GetMethodSignature() []*MethodSignature {
	if m != nil {
		return m.MethodSignature
	}
	return nil
}

type ReweaveRequest struct {
}

func (m *ReweaveRequest) Reset()                    { *m = ReweaveRequest{} }
func (m *ReweaveRequest) String() string            { return proto.CompactTextString(m) }
func (*ReweaveRequest) ProtoMessage()               {}
func (*ReweaveRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{38} }

type ReweaveResponse struct {
	ClassUpdateCount int32 `protobuf:"varint,1,opt,name=class_update_count,json=classUpdateCount" json:"class_update_count,omitempty"`
}

func (m *ReweaveResponse) Reset()                    { *m = ReweaveResponse{} }
func (m *ReweaveResponse) String() string            { return proto.CompactTextString(m) }
func (*ReweaveResponse) ProtoMessage()               {}
func (*ReweaveResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{39} }

func (m *ReweaveResponse) GetClassUpdateCount() int32 {
	if m != nil {
		return m.ClassUpdateCount
	}
	return 0
}

type HeaderRequest struct {
	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
}

func (m *HeaderRequest) Reset()                    { *m = HeaderRequest{} }
func (m *HeaderRequest) String() string            { return proto.CompactTextString(m) }
func (*HeaderRequest) ProtoMessage()               {}
func (*HeaderRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{40} }

func (m *HeaderRequest) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

type HeaderResponse struct {
	Header *Trace_Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
}

func (m *HeaderResponse) Reset()                    { *m = HeaderResponse{} }
func (m *HeaderResponse) String() string            { return proto.CompactTextString(m) }
func (*HeaderResponse) ProtoMessage()               {}
func (*HeaderResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{41} }

func (m *HeaderResponse) GetHeader() *Trace_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type EntriesRequest struct {
	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
}

func (m *EntriesRequest) Reset()                    { *m = EntriesRequest{} }
func (m *EntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*EntriesRequest) ProtoMessage()               {}
func (*EntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{42} }

func (m *EntriesRequest) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

type EntriesResponse struct {
	Entry []*Trace_Entry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
	// sends full_text_sha1, beginning_text, ending_text if sha1 is known to already exist in the
	// central collector, otherwise sends only full_text (with no expectation that sha1 will be stored
	// in the central collector)
	SharedQueryText []*Trace_SharedQueryText `protobuf:"bytes,2,rep,name=shared_query_text,json=sharedQueryText" json:"shared_query_text,omitempty"`
}

func (m *EntriesResponse) Reset()                    { *m = EntriesResponse{} }
func (m *EntriesResponse) String() string            { return proto.CompactTextString(m) }
func (*EntriesResponse) ProtoMessage()               {}
func (*EntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{43} }

func (m *EntriesResponse) GetEntry() []*Trace_Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *EntriesResponse) GetSharedQueryText() []*Trace_SharedQueryText {
	if m != nil {
		return m.SharedQueryText
	}
	return nil
}

type MainThreadProfileRequest struct {
	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
}

func (m *MainThreadProfileRequest) Reset()                    { *m = MainThreadProfileRequest{} }
func (m *MainThreadProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*MainThreadProfileRequest) ProtoMessage()               {}
func (*MainThreadProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{44} }

func (m *MainThreadProfileRequest) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

type MainThreadProfileResponse struct {
	Profile *Profile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *MainThreadProfileResponse) Reset()                    { *m = MainThreadProfileResponse{} }
func (m *MainThreadProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*MainThreadProfileResponse) ProtoMessage()               {}
func (*MainThreadProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{45} }

func (m *MainThreadProfileResponse) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type AuxThreadProfileRequest struct {
	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
}

func (m *AuxThreadProfileRequest) Reset()                    { *m = AuxThreadProfileRequest{} }
func (m *AuxThreadProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*AuxThreadProfileRequest) ProtoMessage()               {}
func (*AuxThreadProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{46} }

func (m *AuxThreadProfileRequest) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

type AuxThreadProfileResponse struct {
	Profile *Profile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *AuxThreadProfileResponse) Reset()                    { *m = AuxThreadProfileResponse{} }
func (m *AuxThreadProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*AuxThreadProfileResponse) ProtoMessage()               {}
func (*AuxThreadProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{47} }

func (m *AuxThreadProfileResponse) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type FullTraceRequest struct {
	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
}

func (m *FullTraceRequest) Reset()                    { *m = FullTraceRequest{} }
func (m *FullTraceRequest) String() string            { return proto.CompactTextString(m) }
func (*FullTraceRequest) ProtoMessage()               {}
func (*FullTraceRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{48} }

func (m *FullTraceRequest) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

type FullTraceResponse struct {
	Trace           *Trace   `protobuf:"bytes,1,opt,name=trace" json:"trace,omitempty"`
	SharedQueryText []string `protobuf:"bytes,2,rep,name=shared_query_text,json=sharedQueryText" json:"shared_query_text,omitempty"`
}

func (m *FullTraceResponse) Reset()                    { *m = FullTraceResponse{} }
func (m *FullTraceResponse) String() string            { return proto.CompactTextString(m) }
func (*FullTraceResponse) ProtoMessage()               {}
func (*FullTraceResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{49} }

func (m *FullTraceResponse) GetTrace() *Trace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *FullTraceResponse) GetSharedQueryText() []string {
	if m != nil {
		return m.SharedQueryText
	}
	return nil
}

type UnknownRequestResponse struct {
}

func (m *UnknownRequestResponse) Reset()                    { *m = UnknownRequestResponse{} }
func (m *UnknownRequestResponse) String() string            { return proto.CompactTextString(m) }
func (*UnknownRequestResponse) ProtoMessage()               {}
func (*UnknownRequestResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{50} }

type ExceptionResponse struct {
}

func (m *ExceptionResponse) Reset()                    { *m = ExceptionResponse{} }
func (m *ExceptionResponse) String() string            { return proto.CompactTextString(m) }
func (*ExceptionResponse) ProtoMessage()               {}
func (*ExceptionResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{51} }

type ThreadDump struct {
	Transaction         []*ThreadDump_Transaction `protobuf:"bytes,1,rep,name=transaction" json:"transaction,omitempty"`
	UnmatchedThread     []*ThreadDump_Thread      `protobuf:"bytes,2,rep,name=unmatched_thread,json=unmatchedThread" json:"unmatched_thread,omitempty"`
	ThreadDumpingThread *ThreadDump_Thread        `protobuf:"bytes,3,opt,name=thread_dumping_thread,json=threadDumpingThread" json:"thread_dumping_thread,omitempty"`
	JstackAvailable     bool                      `protobuf:"varint,4,opt,name=jstack_available,json=jstackAvailable" json:"jstack_available,omitempty"`
}

func (m *ThreadDump) Reset()                    { *m = ThreadDump{} }
func (m *ThreadDump) String() string            { return proto.CompactTextString(m) }
func (*ThreadDump) ProtoMessage()               {}
func (*ThreadDump) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{52} }

func (m *ThreadDump) GetTransaction() []*ThreadDump_Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *ThreadDump) GetUnmatchedThread() []*ThreadDump_Thread {
	if m != nil {
		return m.UnmatchedThread
	}
	return nil
}

func (m *ThreadDump) GetThreadDumpingThread() *ThreadDump_Thread {
	if m != nil {
		return m.ThreadDumpingThread
	}
	return nil
}

func (m *ThreadDump) GetJstackAvailable() bool {
	if m != nil {
		return m.JstackAvailable
	}
	return false
}

type ThreadDump_Transaction struct {
	Headline           string         `protobuf:"bytes,6,opt,name=headline" json:"headline,omitempty"`
	TransactionType    string         `protobuf:"bytes,1,opt,name=transaction_type,json=transactionType" json:"transaction_type,omitempty"`
	TransactionName    string         `protobuf:"bytes,2,opt,name=transaction_name,json=transactionName" json:"transaction_name,omitempty"`
	TotalDurationNanos int64          `protobuf:"varint,3,opt,name=total_duration_nanos,json=totalDurationNanos" json:"total_duration_nanos,omitempty"`
	TotalCpuNanos      *OptionalInt64 `protobuf:"bytes,7,opt,name=total_cpu_nanos,json=totalCpuNanos" json:"total_cpu_nanos,omitempty"`
	// trace id is only included if a trace will be stored for this transaction
	// (e.g. the transaction exceeds the slow threshold)
	TraceId string               `protobuf:"bytes,4,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	Thread  []*ThreadDump_Thread `protobuf:"bytes,5,rep,name=thread" json:"thread,omitempty"`
}

func (m *ThreadDump_Transaction) Reset()                    { *m = ThreadDump_Transaction{} }
func (m *ThreadDump_Transaction) String() string            { return proto.CompactTextString(m) }
func (*ThreadDump_Transaction) ProtoMessage()               {}
func (*ThreadDump_Transaction) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{52, 0} }

func (m *ThreadDump_Transaction) GetHeadline() string {
	if m != nil {
		return m.Headline
	}
	return ""
}

func (m *ThreadDump_Transaction) GetTransactionType() string {
	if m != nil {
		return m.TransactionType
	}
	return ""
}

func (m *ThreadDump_Transaction) GetTransactionName() string {
	if m != nil {
		return m.TransactionName
	}
	return ""
}

func (m *ThreadDump_Transaction) GetTotalDurationNanos() int64 {
	if m != nil {
		return m.TotalDurationNanos
	}
	return 0
}

func (m *ThreadDump_Transaction) GetTotalCpuNanos() *OptionalInt64 {
	if m != nil {
		return m.TotalCpuNanos
	}
	return nil
}

func (m *ThreadDump_Transaction) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *ThreadDump_Transaction) GetThread() []*ThreadDump_Thread {
	if m != nil {
		return m.Thread
	}
	return nil
}

type ThreadDump_Thread struct {
	Name              string                          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id                int64                           `protobuf:"varint,5,opt,name=id" json:"id,omitempty"`
	State             string                          `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	LockName          string                          `protobuf:"bytes,3,opt,name=lock_name,json=lockName" json:"lock_name,omitempty"`
	LockInfo          *ThreadDump_LockInfo            `protobuf:"bytes,6,opt,name=lock_info,json=lockInfo" json:"lock_info,omitempty"`
	LockOwnerId       *OptionalInt64                  `protobuf:"bytes,7,opt,name=lock_owner_id,json=lockOwnerId" json:"lock_owner_id,omitempty"`
	StackTraceElement []*ThreadDump_StackTraceElement `protobuf:"bytes,4,rep,name=stack_trace_element,json=stackTraceElement" json:"stack_trace_element,omitempty"`
}

func (m *ThreadDump_Thread) Reset()                    { *m = ThreadDump_Thread{} }
func (m *ThreadDump_Thread) String() string            { return proto.CompactTextString(m) }
func (*ThreadDump_Thread) ProtoMessage()               {}
func (*ThreadDump_Thread) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{52, 1} }

func (m *ThreadDump_Thread) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ThreadDump_Thread) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ThreadDump_Thread) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ThreadDump_Thread) GetLockName() string {
	if m != nil {
		return m.LockName
	}
	return ""
}

func (m *ThreadDump_Thread) GetLockInfo() *ThreadDump_LockInfo {
	if m != nil {
		return m.LockInfo
	}
	return nil
}

func (m *ThreadDump_Thread) GetLockOwnerId() *OptionalInt64 {
	if m != nil {
		return m.LockOwnerId
	}
	return nil
}

func (m *ThreadDump_Thread) GetStackTraceElement() []*ThreadDump_StackTraceElement {
	if m != nil {
		return m.StackTraceElement
	}
	return nil
}

type ThreadDump_StackTraceElement struct {
	ClassName  string `protobuf:"bytes,1,opt,name=class_name,json=className" json:"class_name,omitempty"`
	MethodName string `protobuf:"bytes,2,opt,name=method_name,json=methodName" json:"method_name,omitempty"`
	FileName   string `protobuf:"bytes,3,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	// sint since often negative
	LineNumber  int32                  `protobuf:"zigzag32,4,opt,name=line_number,json=lineNumber" json:"line_number,omitempty"`
	MonitorInfo []*ThreadDump_LockInfo `protobuf:"bytes,5,rep,name=monitor_info,json=monitorInfo" json:"monitor_info,omitempty"`
}

func (m *ThreadDump_StackTraceElement) Reset()         { *m = ThreadDump_StackTraceElement{} }
func (m *ThreadDump_StackTraceElement) String() string { return proto.CompactTextString(m) }
func (*ThreadDump_StackTraceElement) ProtoMessage()    {}
func (*ThreadDump_StackTraceElement) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{52, 2}
}

func (m *ThreadDump_StackTraceElement) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *ThreadDump_StackTraceElement) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *ThreadDump_StackTraceElement) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *ThreadDump_StackTraceElement) GetLineNumber() int32 {
	if m != nil {
		return m.LineNumber
	}
	return 0
}

func (m *ThreadDump_StackTraceElement) GetMonitorInfo() []*ThreadDump_LockInfo {
	if m != nil {
		return m.MonitorInfo
	}
	return nil
}

type ThreadDump_LockInfo struct {
	ClassName        string `protobuf:"bytes,1,opt,name=class_name,json=className" json:"class_name,omitempty"`
	IdentityHashCode int32  `protobuf:"varint,2,opt,name=identity_hash_code,json=identityHashCode" json:"identity_hash_code,omitempty"`
}

func (m *ThreadDump_LockInfo) Reset()                    { *m = ThreadDump_LockInfo{} }
func (m *ThreadDump_LockInfo) String() string            { return proto.CompactTextString(m) }
func (*ThreadDump_LockInfo) ProtoMessage()               {}
func (*ThreadDump_LockInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{52, 3} }

func (m *ThreadDump_LockInfo) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *ThreadDump_LockInfo) GetIdentityHashCode() int32 {
	if m != nil {
		return m.IdentityHashCode
	}
	return 0
}

type HeapDumpFileInfo struct {
	FilePath      string `protobuf:"bytes,1,opt,name=file_path,json=filePath" json:"file_path,omitempty"`
	FileSizeBytes int64  `protobuf:"varint,2,opt,name=file_size_bytes,json=fileSizeBytes" json:"file_size_bytes,omitempty"`
}

func (m *HeapDumpFileInfo) Reset()                    { *m = HeapDumpFileInfo{} }
func (m *HeapDumpFileInfo) String() string            { return proto.CompactTextString(m) }
func (*HeapDumpFileInfo) ProtoMessage()               {}
func (*HeapDumpFileInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{53} }

func (m *HeapDumpFileInfo) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *HeapDumpFileInfo) GetFileSizeBytes() int64 {
	if m != nil {
		return m.FileSizeBytes
	}
	return 0
}

type HeapHistogram struct {
	ClassInfo []*HeapHistogram_ClassInfo `protobuf:"bytes,1,rep,name=class_info,json=classInfo" json:"class_info,omitempty"`
}

func (m *HeapHistogram) Reset()                    { *m = HeapHistogram{} }
func (m *HeapHistogram) String() string            { return proto.CompactTextString(m) }
func (*HeapHistogram) ProtoMessage()               {}
func (*HeapHistogram) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{54} }

func (m *HeapHistogram) GetClassInfo() []*HeapHistogram_ClassInfo {
	if m != nil {
		return m.ClassInfo
	}
	return nil
}

type HeapHistogram_ClassInfo struct {
	ClassName string `protobuf:"bytes,1,opt,name=class_name,json=className" json:"class_name,omitempty"`
	Bytes     int64  `protobuf:"varint,2,opt,name=bytes" json:"bytes,omitempty"`
	Count     int64  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *HeapHistogram_ClassInfo) Reset()                    { *m = HeapHistogram_ClassInfo{} }
func (m *HeapHistogram_ClassInfo) String() string            { return proto.CompactTextString(m) }
func (*HeapHistogram_ClassInfo) ProtoMessage()               {}
func (*HeapHistogram_ClassInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{54, 0} }

func (m *HeapHistogram_ClassInfo) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *HeapHistogram_ClassInfo) GetBytes() int64 {
	if m != nil {
		return m.Bytes
	}
	return 0
}

func (m *HeapHistogram_ClassInfo) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type MBeanDump struct {
	MbeanInfo []*MBeanDump_MBeanInfo `protobuf:"bytes,1,rep,name=mbean_info,json=mbeanInfo" json:"mbean_info,omitempty"`
}

func (m *MBeanDump) Reset()                    { *m = MBeanDump{} }
func (m *MBeanDump) String() string            { return proto.CompactTextString(m) }
func (*MBeanDump) ProtoMessage()               {}
func (*MBeanDump) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{55} }

func (m *MBeanDump) GetMbeanInfo() []*MBeanDump_MBeanInfo {
	if m != nil {
		return m.MbeanInfo
	}
	return nil
}

type MBeanDump_MBeanInfo struct {
	ObjectName string                      `protobuf:"bytes,1,opt,name=object_name,json=objectName" json:"object_name,omitempty"`
	Attribute  []*MBeanDump_MBeanAttribute `protobuf:"bytes,2,rep,name=attribute" json:"attribute,omitempty"`
}

func (m *MBeanDump_MBeanInfo) Reset()                    { *m = MBeanDump_MBeanInfo{} }
func (m *MBeanDump_MBeanInfo) String() string            { return proto.CompactTextString(m) }
func (*MBeanDump_MBeanInfo) ProtoMessage()               {}
func (*MBeanDump_MBeanInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{55, 0} }

func (m *MBeanDump_MBeanInfo) GetObjectName() string {
	if m != nil {
		return m.ObjectName
	}
	return ""
}

func (m *MBeanDump_MBeanInfo) GetAttribute() []*MBeanDump_MBeanAttribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

type MBeanDump_MBeanAttribute struct {
	Name  string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *MBeanDump_MBeanValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MBeanDump_MBeanAttribute) Reset()                    { *m = MBeanDump_MBeanAttribute{} }
func (m *MBeanDump_MBeanAttribute) String() string            { return proto.CompactTextString(m) }
func (*MBeanDump_MBeanAttribute) ProtoMessage()               {}
func (*MBeanDump_MBeanAttribute) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{55, 1} }

func (m *MBeanDump_MBeanAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MBeanDump_MBeanAttribute) GetValue() *MBeanDump_MBeanValue {
	if m != nil {
		return m.Value
	}
	return nil
}

type MBeanDump_MBeanValue struct {
	Null bool `protobuf:"varint,1,opt,name=null" json:"null,omitempty"`
	// Types that are valid to be assigned to Val:
	//	*MBeanDump_MBeanValue_String_
	//	*MBeanDump_MBeanValue_Double
	//	*MBeanDump_MBeanValue_Long
	//	*MBeanDump_MBeanValue_Boolean
	//	*MBeanDump_MBeanValue_List
	//	*MBeanDump_MBeanValue_Map
	Val isMBeanDump_MBeanValue_Val `protobuf_oneof:"val"`
}

func (m *MBeanDump_MBeanValue) Reset()                    { *m = MBeanDump_MBeanValue{} }
func (m *MBeanDump_MBeanValue) String() string            { return proto.CompactTextString(m) }
func (*MBeanDump_MBeanValue) ProtoMessage()               {}
func (*MBeanDump_MBeanValue) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{55, 2} }

type isMBeanDump_MBeanValue_Val interface {
	isMBeanDump_MBeanValue_Val()
}

type MBeanDump_MBeanValue_String_ struct {
	String_ string `protobuf:"bytes,2,opt,name=string,oneof"`
}
type MBeanDump_MBeanValue_Double struct {
	Double float64 `protobuf:"fixed64,3,opt,name=double,oneof"`
}
type MBeanDump_MBeanValue_Long struct {
	Long int64 `protobuf:"varint,4,opt,name=long,oneof"`
}
type MBeanDump_MBeanValue_Boolean struct {
	Boolean bool `protobuf:"varint,5,opt,name=boolean,oneof"`
}
type MBeanDump_MBeanValue_List struct {
	List *MBeanDump_MBeanValueList `protobuf:"bytes,10,opt,name=list,oneof"`
}
type MBeanDump_MBeanValue_Map struct {
	Map *MBeanDump_MBeanValueMap `protobuf:"bytes,11,opt,name=map,oneof"`
}

func (*MBeanDump_MBeanValue_String_) isMBeanDump_MBeanValue_Val() {}
func (*MBeanDump_MBeanValue_Double) isMBeanDump_MBeanValue_Val()  {}
func (*MBeanDump_MBeanValue_Long) isMBeanDump_MBeanValue_Val()    {}
func (*MBeanDump_MBeanValue_Boolean) isMBeanDump_MBeanValue_Val() {}
func (*MBeanDump_MBeanValue_List) isMBeanDump_MBeanValue_Val()    {}
func (*MBeanDump_MBeanValue_Map) isMBeanDump_MBeanValue_Val()     {}

func (m *MBeanDump_MBeanValue) GetVal() isMBeanDump_MBeanValue_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *MBeanDump_MBeanValue) GetNull() bool {
	if m != nil {
		return m.Null
	}
	return false
}

func (m *MBeanDump_MBeanValue) GetString_() string {
	if x, ok := m.GetVal().(*MBeanDump_MBeanValue_String_); ok {
		return x.String_
	}
	return ""
}

func (m *MBeanDump_MBeanValue) GetDouble() float64 {
	if x, ok := m.GetVal().(*MBeanDump_MBeanValue_Double); ok {
		return x.Double
	}
	return 0
}

func (m *MBeanDump_MBeanValue) GetLong() int64 {
	if x, ok := m.GetVal().(*MBeanDump_MBeanValue_Long); ok {
		return x.Long
	}
	return 0
}

func (m *MBeanDump_MBeanValue) GetBoolean() bool {
	if x, ok := m.GetVal().(*MBeanDump_MBeanValue_Boolean); ok {
		return x.Boolean
	}
	return false
}

func (m *MBeanDump_MBeanValue) GetList() *MBeanDump_MBeanValueList {
	if x, ok := m.GetVal().(*MBeanDump_MBeanValue_List); ok {
		return x.List
	}
	return nil
}

func (m *MBeanDump_MBeanValue) GetMap() *MBeanDump_MBeanValueMap {
	if x, ok := m.GetVal().(*MBeanDump_MBeanValue_Map); ok {
		return x.Map
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MBeanDump_MBeanValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MBeanDump_MBeanValue_OneofMarshaler, _MBeanDump_MBeanValue_OneofUnmarshaler, _MBeanDump_MBeanValue_OneofSizer, []interface{}{
		(*MBeanDump_MBeanValue_String_)(nil),
		(*MBeanDump_MBeanValue_Double)(nil),
		(*MBeanDump_MBeanValue_Long)(nil),
		(*MBeanDump_MBeanValue_Boolean)(nil),
		(*MBeanDump_MBeanValue_List)(nil),
		(*MBeanDump_MBeanValue_Map)(nil),
	}
}

func _MBeanDump_MBeanValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MBeanDump_MBeanValue)
	// val
	switch x := m.Val.(type) {
	case *MBeanDump_MBeanValue_String_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.String_)
	case *MBeanDump_MBeanValue_Double:
		b.EncodeVarint(3<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.Double))
	case *MBeanDump_MBeanValue_Long:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Long))
	case *MBeanDump_MBeanValue_Boolean:
		t := uint64(0)
		if x.Boolean {
			t = 1
		}
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *MBeanDump_MBeanValue_List:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.List); err != nil {
			return err
		}
	case *MBeanDump_MBeanValue_Map:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Map); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MBeanDump_MBeanValue.Val has unexpected type %T", x)
	}
	return nil
}

func _MBeanDump_MBeanValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MBeanDump_MBeanValue)
	switch tag {
	case 2: // val.string
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Val = &MBeanDump_MBeanValue_String_{x}
		return true, err
	case 3: // val.double
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Val = &MBeanDump_MBeanValue_Double{math.Float64frombits(x)}
		return true, err
	case 4: // val.long
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Val = &MBeanDump_MBeanValue_Long{int64(x)}
		return true, err
	case 5: // val.boolean
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Val = &MBeanDump_MBeanValue_Boolean{x != 0}
		return true, err
	case 10: // val.list
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MBeanDump_MBeanValueList)
		err := b.DecodeMessage(msg)
		m.Val = &MBeanDump_MBeanValue_List{msg}
		return true, err
	case 11: // val.map
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MBeanDump_MBeanValueMap)
		err := b.DecodeMessage(msg)
		m.Val = &MBeanDump_MBeanValue_Map{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MBeanDump_MBeanValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MBeanDump_MBeanValue)
	// val
	switch x := m.Val.(type) {
	case *MBeanDump_MBeanValue_String_:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.String_)))
		n += len(x.String_)
	case *MBeanDump_MBeanValue_Double:
		n += proto.SizeVarint(3<<3 | proto.WireFixed64)
		n += 8
	case *MBeanDump_MBeanValue_Long:
		n += proto.SizeVarint(4<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Long))
	case *MBeanDump_MBeanValue_Boolean:
		n += proto.SizeVarint(5<<3 | proto.WireVarint)
		n += 1
	case *MBeanDump_MBeanValue_List:
		s := proto.Size(x.List)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MBeanDump_MBeanValue_Map:
		s := proto.Size(x.Map)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MBeanDump_MBeanValueList struct {
	Value []*MBeanDump_MBeanValue `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *MBeanDump_MBeanValueList) Reset()                    { *m = MBeanDump_MBeanValueList{} }
func (m *MBeanDump_MBeanValueList) String() string            { return proto.CompactTextString(m) }
func (*MBeanDump_MBeanValueList) ProtoMessage()               {}
func (*MBeanDump_MBeanValueList) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{55, 3} }

func (m *MBeanDump_MBeanValueList) GetValue() []*MBeanDump_MBeanValue {
	if m != nil {
		return m.Value
	}
	return nil
}

type MBeanDump_MBeanValueMap struct {
	Entry []*MBeanDump_MBeanValueMapEntry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (m *MBeanDump_MBeanValueMap) Reset()                    { *m = MBeanDump_MBeanValueMap{} }
func (m *MBeanDump_MBeanValueMap) String() string            { return proto.CompactTextString(m) }
func (*MBeanDump_MBeanValueMap) ProtoMessage()               {}
func (*MBeanDump_MBeanValueMap) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{55, 4} }

func (m *MBeanDump_MBeanValueMap) GetEntry() []*MBeanDump_MBeanValueMapEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type MBeanDump_MBeanValueMapEntry struct {
	Key   string                `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value *MBeanDump_MBeanValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *MBeanDump_MBeanValueMapEntry) Reset()         { *m = MBeanDump_MBeanValueMapEntry{} }
func (m *MBeanDump_MBeanValueMapEntry) String() string { return proto.CompactTextString(m) }
func (*MBeanDump_MBeanValueMapEntry) ProtoMessage()    {}
func (*MBeanDump_MBeanValueMapEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{55, 5}
}

func (m *MBeanDump_MBeanValueMapEntry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MBeanDump_MBeanValueMapEntry) GetValue() *MBeanDump_MBeanValue {
	if m != nil {
		return m.Value
	}
	return nil
}

type MBeanMeta struct {
	Unmatched     bool     `protobuf:"varint,1,opt,name=unmatched" json:"unmatched,omitempty"`
	Unavailable   bool     `protobuf:"varint,2,opt,name=unavailable" json:"unavailable,omitempty"`
	AttributeName []string `protobuf:"bytes,3,rep,name=attribute_name,json=attributeName" json:"attribute_name,omitempty"`
}

func (m *MBeanMeta) Reset()                    { *m = MBeanMeta{} }
func (m *MBeanMeta) String() string            { return proto.CompactTextString(m) }
func (*MBeanMeta) ProtoMessage()               {}
func (*MBeanMeta) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{56} }

func (m *MBeanMeta) GetUnmatched() bool {
	if m != nil {
		return m.Unmatched
	}
	return false
}

func (m *MBeanMeta) GetUnavailable() bool {
	if m != nil {
		return m.Unavailable
	}
	return false
}

func (m *MBeanMeta) GetAttributeName() []string {
	if m != nil {
		return m.AttributeName
	}
	return nil
}

type Capabilities struct {
	ThreadCpuTime        *Availability `protobuf:"bytes,1,opt,name=thread_cpu_time,json=threadCpuTime" json:"thread_cpu_time,omitempty"`
	ThreadContentionTime *Availability `protobuf:"bytes,2,opt,name=thread_contention_time,json=threadContentionTime" json:"thread_contention_time,omitempty"`
	ThreadAllocatedBytes *Availability `protobuf:"bytes,3,opt,name=thread_allocated_bytes,json=threadAllocatedBytes" json:"thread_allocated_bytes,omitempty"`
}

func (m *Capabilities) Reset()                    { *m = Capabilities{} }
func (m *Capabilities) String() string            { return proto.CompactTextString(m) }
func (*Capabilities) ProtoMessage()               {}
func (*Capabilities) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{57} }

func (m *Capabilities) GetThreadCpuTime() *Availability {
	if m != nil {
		return m.ThreadCpuTime
	}
	return nil
}

func (m *Capabilities) GetThreadContentionTime() *Availability {
	if m != nil {
		return m.ThreadContentionTime
	}
	return nil
}

func (m *Capabilities) GetThreadAllocatedBytes() *Availability {
	if m != nil {
		return m.ThreadAllocatedBytes
	}
	return nil
}

type Availability struct {
	Available bool   `protobuf:"varint,1,opt,name=available" json:"available,omitempty"`
	Reason    string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
}

func (m *Availability) Reset()                    { *m = Availability{} }
func (m *Availability) String() string            { return proto.CompactTextString(m) }
func (*Availability) ProtoMessage()               {}
func (*Availability) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{58} }

func (m *Availability) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Availability) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type GlobalMeta struct {
	JvmOutOfSync                   bool `protobuf:"varint,1,opt,name=jvm_out_of_sync,json=jvmOutOfSync" json:"jvm_out_of_sync,omitempty"`
	JvmRetransformClassesSupported bool `protobuf:"varint,2,opt,name=jvm_retransform_classes_supported,json=jvmRetransformClassesSupported" json:"jvm_retransform_classes_supported,omitempty"`
}

func (m *GlobalMeta) Reset()                    { *m = GlobalMeta{} }
func (m *GlobalMeta) String() string            { return proto.CompactTextString(m) }
func (*GlobalMeta) ProtoMessage()               {}
func (*GlobalMeta) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{59} }

func (m *GlobalMeta) GetJvmOutOfSync() bool {
	if m != nil {
		return m.JvmOutOfSync
	}
	return false
}

func (m *GlobalMeta) GetJvmRetransformClassesSupported() bool {
	if m != nil {
		return m.JvmRetransformClassesSupported
	}
	return false
}

type MethodSignature struct {
	Name          string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ParameterType []string `protobuf:"bytes,2,rep,name=parameter_type,json=parameterType" json:"parameter_type,omitempty"`
	ReturnType    string   `protobuf:"bytes,3,opt,name=return_type,json=returnType" json:"return_type,omitempty"`
	Modifier      []string `protobuf:"bytes,4,rep,name=modifier" json:"modifier,omitempty"`
}

func (m *MethodSignature) Reset()                    { *m = MethodSignature{} }
func (m *MethodSignature) String() string            { return proto.CompactTextString(m) }
func (*MethodSignature) ProtoMessage()               {}
func (*MethodSignature) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{60} }

func (m *MethodSignature) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MethodSignature) GetParameterType() []string {
	if m != nil {
		return m.ParameterType
	}
	return nil
}

func (m *MethodSignature) GetReturnType() string {
	if m != nil {
		return m.ReturnType
	}
	return ""
}

func (m *MethodSignature) GetModifier() []string {
	if m != nil {
		return m.Modifier
	}
	return nil
}

func init() {
	proto.RegisterType((*CentralRequest)(nil), "org_glowroot_wire_api_model.CentralRequest")
	proto.RegisterType((*AgentResponse)(nil), "org_glowroot_wire_api_model.AgentResponse")
	proto.RegisterType((*Hello)(nil), "org_glowroot_wire_api_model.Hello")
	proto.RegisterType((*HelloAck)(nil), "org_glowroot_wire_api_model.HelloAck")
	proto.RegisterType((*AgentConfigUpdateRequest)(nil), "org_glowroot_wire_api_model.AgentConfigUpdateRequest")
	proto.RegisterType((*AgentConfigUpdateResponse)(nil), "org_glowroot_wire_api_model.AgentConfigUpdateResponse")
	proto.RegisterType((*ThreadDumpRequest)(nil), "org_glowroot_wire_api_model.ThreadDumpRequest")
	proto.RegisterType((*ThreadDumpResponse)(nil), "org_glowroot_wire_api_model.ThreadDumpResponse")
	proto.RegisterType((*JstackRequest)(nil), "org_glowroot_wire_api_model.JstackRequest")
	proto.RegisterType((*JstackResponse)(nil), "org_glowroot_wire_api_model.JstackResponse")
	proto.RegisterType((*AvailableDiskSpaceRequest)(nil), "org_glowroot_wire_api_model.AvailableDiskSpaceRequest")
	proto.RegisterType((*AvailableDiskSpaceResponse)(nil), "org_glowroot_wire_api_model.AvailableDiskSpaceResponse")
	proto.RegisterType((*HeapDumpRequest)(nil), "org_glowroot_wire_api_model.HeapDumpRequest")
	proto.RegisterType((*HeapDumpResponse)(nil), "org_glowroot_wire_api_model.HeapDumpResponse")
	proto.RegisterType((*HeapHistogramRequest)(nil), "org_glowroot_wire_api_model.HeapHistogramRequest")
	proto.RegisterType((*HeapHistogramResponse)(nil), "org_glowroot_wire_api_model.HeapHistogramResponse")
	proto.RegisterType((*GcRequest)(nil), "org_glowroot_wire_api_model.GcRequest")
	proto.RegisterType((*GcResponse)(nil), "org_glowroot_wire_api_model.GcResponse")
	proto.RegisterType((*MBeanDumpRequest)(nil), "org_glowroot_wire_api_model.MBeanDumpRequest")
	proto.RegisterType((*MBeanDumpResponse)(nil), "org_glowroot_wire_api_model.MBeanDumpResponse")
	proto.RegisterType((*MatchingMBeanObjectNamesRequest)(nil), "org_glowroot_wire_api_model.MatchingMBeanObjectNamesRequest")
	proto.RegisterType((*MatchingMBeanObjectNamesResponse)(nil), "org_glowroot_wire_api_model.MatchingMBeanObjectNamesResponse")
	proto.RegisterType((*MBeanMetaRequest)(nil), "org_glowroot_wire_api_model.MBeanMetaRequest")
	proto.RegisterType((*MBeanMetaResponse)(nil), "org_glowroot_wire_api_model.MBeanMetaResponse")
	proto.RegisterType((*SystemPropertiesRequest)(nil), "org_glowroot_wire_api_model.SystemPropertiesRequest")
	proto.RegisterType((*SystemPropertiesResponse)(nil), "org_glowroot_wire_api_model.SystemPropertiesResponse")
	proto.RegisterType((*CapabilitiesRequest)(nil), "org_glowroot_wire_api_model.CapabilitiesRequest")
	proto.RegisterType((*CapabilitiesResponse)(nil), "org_glowroot_wire_api_model.CapabilitiesResponse")
	proto.RegisterType((*GlobalMetaRequest)(nil), "org_glowroot_wire_api_model.GlobalMetaRequest")
	proto.RegisterType((*GlobalMetaResponse)(nil), "org_glowroot_wire_api_model.GlobalMetaResponse")
	proto.RegisterType((*PreloadClasspathCacheRequest)(nil), "org_glowroot_wire_api_model.PreloadClasspathCacheRequest")
	proto.RegisterType((*PreloadClasspathCacheResponse)(nil), "org_glowroot_wire_api_model.PreloadClasspathCacheResponse")
	proto.RegisterType((*MatchingClassNamesRequest)(nil), "org_glowroot_wire_api_model.MatchingClassNamesRequest")
	proto.RegisterType((*MatchingClassNamesResponse)(nil), "org_glowroot_wire_api_model.MatchingClassNamesResponse")
	proto.RegisterType((*MatchingMethodNamesRequest)(nil), "org_glowroot_wire_api_model.MatchingMethodNamesRequest")
	proto.RegisterType((*MatchingMethodNamesResponse)(nil), "org_glowroot_wire_api_model.MatchingMethodNamesResponse")
	proto.RegisterType((*MethodSignaturesRequest)(nil), "org_glowroot_wire_api_model.MethodSignaturesRequest")
	proto.RegisterType((*MethodSignaturesResponse)(nil), "org_glowroot_wire_api_model.MethodSignaturesResponse")
	proto.RegisterType((*ReweaveRequest)(nil), "org_glowroot_wire_api_model.ReweaveRequest")
	proto.RegisterType((*ReweaveResponse)(nil), "org_glowroot_wire_api_model.ReweaveResponse")
	proto.RegisterType((*HeaderRequest)(nil), "org_glowroot_wire_api_model.HeaderRequest")
	proto.RegisterType((*HeaderResponse)(nil), "org_glowroot_wire_api_model.HeaderResponse")
	proto.RegisterType((*EntriesRequest)(nil), "org_glowroot_wire_api_model.EntriesRequest")
	proto.RegisterType((*EntriesResponse)(nil), "org_glowroot_wire_api_model.EntriesResponse")
	proto.RegisterType((*MainThreadProfileRequest)(nil), "org_glowroot_wire_api_model.MainThreadProfileRequest")
	proto.RegisterType((*MainThreadProfileResponse)(nil), "org_glowroot_wire_api_model.MainThreadProfileResponse")
	proto.RegisterType((*AuxThreadProfileRequest)(nil), "org_glowroot_wire_api_model.AuxThreadProfileRequest")
	proto.RegisterType((*AuxThreadProfileResponse)(nil), "org_glowroot_wire_api_model.AuxThreadProfileResponse")
	proto.RegisterType((*FullTraceRequest)(nil), "org_glowroot_wire_api_model.FullTraceRequest")
	proto.RegisterType((*FullTraceResponse)(nil), "org_glowroot_wire_api_model.FullTraceResponse")
	proto.RegisterType((*UnknownRequestResponse)(nil), "org_glowroot_wire_api_model.UnknownRequestResponse")
	proto.RegisterType((*ExceptionResponse)(nil), "org_glowroot_wire_api_model.ExceptionResponse")
	proto.RegisterType((*ThreadDump)(nil), "org_glowroot_wire_api_model.ThreadDump")
	proto.RegisterType((*ThreadDump_Transaction)(nil), "org_glowroot_wire_api_model.ThreadDump.Transaction")
	proto.RegisterType((*ThreadDump_Thread)(nil), "org_glowroot_wire_api_model.ThreadDump.Thread")
	proto.RegisterType((*ThreadDump_StackTraceElement)(nil), "org_glowroot_wire_api_model.ThreadDump.StackTraceElement")
	proto.RegisterType((*ThreadDump_LockInfo)(nil), "org_glowroot_wire_api_model.ThreadDump.LockInfo")
	proto.RegisterType((*HeapDumpFileInfo)(nil), "org_glowroot_wire_api_model.HeapDumpFileInfo")
	proto.RegisterType((*HeapHistogram)(nil), "org_glowroot_wire_api_model.HeapHistogram")
	proto.RegisterType((*HeapHistogram_ClassInfo)(nil), "org_glowroot_wire_api_model.HeapHistogram.ClassInfo")
	proto.RegisterType((*MBeanDump)(nil), "org_glowroot_wire_api_model.MBeanDump")
	proto.RegisterType((*MBeanDump_MBeanInfo)(nil), "org_glowroot_wire_api_model.MBeanDump.MBeanInfo")
	proto.RegisterType((*MBeanDump_MBeanAttribute)(nil), "org_glowroot_wire_api_model.MBeanDump.MBeanAttribute")
	proto.RegisterType((*MBeanDump_MBeanValue)(nil), "org_glowroot_wire_api_model.MBeanDump.MBeanValue")
	proto.RegisterType((*MBeanDump_MBeanValueList)(nil), "org_glowroot_wire_api_model.MBeanDump.MBeanValueList")
	proto.RegisterType((*MBeanDump_MBeanValueMap)(nil), "org_glowroot_wire_api_model.MBeanDump.MBeanValueMap")
	proto.RegisterType((*MBeanDump_MBeanValueMapEntry)(nil), "org_glowroot_wire_api_model.MBeanDump.MBeanValueMapEntry")
	proto.RegisterType((*MBeanMeta)(nil), "org_glowroot_wire_api_model.MBeanMeta")
	proto.RegisterType((*Capabilities)(nil), "org_glowroot_wire_api_model.Capabilities")
	proto.RegisterType((*Availability)(nil), "org_glowroot_wire_api_model.Availability")
	proto.RegisterType((*GlobalMeta)(nil), "org_glowroot_wire_api_model.GlobalMeta")
	proto.RegisterType((*MethodSignature)(nil), "org_glowroot_wire_api_model.MethodSignature")
	proto.RegisterEnum("org_glowroot_wire_api_model.MBeanDumpRequest_MBeanDumpKind", MBeanDumpRequest_MBeanDumpKind_name, MBeanDumpRequest_MBeanDumpKind_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DownstreamService service

type DownstreamServiceClient interface {
	Connect(ctx context.Context, opts ...grpc.CallOption) (DownstreamService_ConnectClient, error)
}

type downstreamServiceClient struct {
	cc *grpc.ClientConn
}

func NewDownstreamServiceClient(cc *grpc.ClientConn) DownstreamServiceClient {
	return &downstreamServiceClient{cc}
}

func (c *downstreamServiceClient) Connect(ctx context.Context, opts ...grpc.CallOption) (DownstreamService_ConnectClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_DownstreamService_serviceDesc.Streams[0], c.cc, "/org_glowroot_wire_api_model.DownstreamService/connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &downstreamServiceConnectClient{stream}
	return x, nil
}

type DownstreamService_ConnectClient interface {
	Send(*AgentResponse) error
	Recv() (*CentralRequest, error)
	grpc.ClientStream
}

type downstreamServiceConnectClient struct {
	grpc.ClientStream
}

func (x *downstreamServiceConnectClient) Send(m *AgentResponse) error {
	return x.ClientStream.SendMsg(m)
}

func (x *downstreamServiceConnectClient) Recv() (*CentralRequest, error) {
	m := new(CentralRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for DownstreamService service

type DownstreamServiceServer interface {
	Connect(DownstreamService_ConnectServer) error
}

func RegisterDownstreamServiceServer(s *grpc.Server, srv DownstreamServiceServer) {
	s.RegisterService(&_DownstreamService_serviceDesc, srv)
}

func _DownstreamService_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DownstreamServiceServer).Connect(&downstreamServiceConnectServer{stream})
}

type DownstreamService_ConnectServer interface {
	Send(*CentralRequest) error
	Recv() (*AgentResponse, error)
	grpc.ServerStream
}

type downstreamServiceConnectServer struct {
	grpc.ServerStream
}

func (x *downstreamServiceConnectServer) Send(m *CentralRequest) error {
	return x.ServerStream.SendMsg(m)
}

func (x *downstreamServiceConnectServer) Recv() (*AgentResponse, error) {
	m := new(AgentResponse)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _DownstreamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "org_glowroot_wire_api_model.DownstreamService",
	HandlerType: (*DownstreamServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "connect",
			Handler:       _DownstreamService_Connect_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "DownstreamService.proto",
}

func init() { proto.RegisterFile("DownstreamService.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 3498 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x5b, 0x5b, 0x73, 0x1c, 0x45,
	0x96, 0x56, 0xab, 0x2d, 0x59, 0x7d, 0x74, 0xe9, 0x56, 0x4a, 0x96, 0x5b, 0xed, 0x2b, 0xb5, 0xd8,
	0x18, 0x63, 0x84, 0xd7, 0xc6, 0x80, 0x61, 0x97, 0x0d, 0x59, 0x92, 0x2d, 0x61, 0x4b, 0x32, 0xd5,
	0x32, 0x0e, 0x60, 0x83, 0x22, 0xd5, 0x9d, 0xea, 0x2e, 0xa9, 0x2e, 0x4d, 0x55, 0x96, 0x6c, 0xb1,
	0xb1, 0xc4, 0xb2, 0x1b, 0xb1, 0x11, 0x3c, 0x6c, 0x04, 0xcb, 0xb2, 0xaf, 0xf3, 0x32, 0xbc, 0x4c,
	0xc4, 0xc0, 0x70, 0x99, 0x99, 0xa7, 0xf9, 0x01, 0xf3, 0x17, 0xe6, 0x0f, 0x10, 0x33, 0xef, 0xdc,
	0x1e, 0x27, 0xf2, 0x52, 0x55, 0x59, 0xd5, 0x5d, 0xdd, 0x25, 0xc1, 0x5b, 0xe7, 0xc9, 0x3c, 0xe7,
	0x3b, 0x79, 0x3b, 0xf9, 0x9d, 0x53, 0x12, 0x9c, 0x5c, 0x76, 0x1f, 0x39, 0x3e, 0xf5, 0x08, 0xb6,
	0xeb, 0xc4, 0xdb, 0x37, 0x1b, 0x64, 0xa1, 0xe3, 0xb9, 0xd4, 0x45, 0xa7, 0x5c, 0xaf, 0x65, 0xb4,
	0x2c, 0xf7, 0x91, 0xe7, 0xba, 0xd4, 0x78, 0x64, 0x7a, 0xc4, 0xc0, 0x1d, 0xd3, 0xb0, 0xdd, 0x26,
	0xb1, 0x6a, 0xd3, 0x8b, 0x2d, 0xe2, 0xd0, 0x25, 0xd7, 0xd9, 0x31, 0x5b, 0x62, 0x7c, 0x6d, 0x7c,
	0xcb, 0xc3, 0xa1, 0x72, 0x6d, 0xf2, 0xbe, 0xe7, 0xee, 0x98, 0x56, 0xd8, 0x9c, 0x58, 0x72, 0x6d,
	0xdb, 0x75, 0x44, 0x4b, 0xfb, 0xd5, 0x2c, 0x4c, 0x2d, 0x11, 0x87, 0x7a, 0xd8, 0xd2, 0xc9, 0x7b,
	0x01, 0xf1, 0x29, 0x3a, 0x03, 0xe0, 0x89, 0x9f, 0x86, 0xd9, 0xac, 0x16, 0xce, 0x17, 0x2e, 0x15,
	0xf5, 0x92, 0x94, 0xac, 0x35, 0xd1, 0x32, 0x94, 0xda, 0xc4, 0xb2, 0x5c, 0x03, 0x37, 0xf6, 0xaa,
	0xcd, 0xf3, 0x85, 0x4b, 0xe3, 0xd7, 0x2e, 0x2c, 0xf4, 0xf1, 0x6f, 0x61, 0x95, 0x8d, 0x5e, 0x6c,
	0xec, 0xad, 0x0e, 0xe9, 0x63, 0x6d, 0xf9, 0x1b, 0x3d, 0x82, 0x53, 0x98, 0xb9, 0x6d, 0x34, 0xb8,
	0xdf, 0x46, 0xd0, 0x69, 0x62, 0x4a, 0x0c, 0x09, 0x53, 0xfd, 0x73, 0x81, 0x1b, 0xbe, 0xd1, 0xd7,
	0xb0, 0x32, 0xef, 0x07, 0x5c, 0x5d, 0xce, 0x60, 0x75, 0x48, 0xaf, 0xe2, 0x8c, 0x3e, 0x84, 0x61,
	0x86, 0xb6, 0x3d, 0x82, 0x9b, 0x46, 0x33, 0xb0, 0x3b, 0x11, 0xe0, 0x6f, 0x87, 0x39, 0xe0, 0x42,
	0x5f, 0xc0, 0x2d, 0xae, 0xb8, 0x1c, 0xd8, 0x9d, 0x18, 0x69, 0x9a, 0xa6, 0x85, 0x68, 0x0b, 0xa6,
	0x76, 0x7d, 0x8a, 0x1b, 0x7b, 0x91, 0xf5, 0xdf, 0x0b, 0xeb, 0x97, 0xfb, 0x5a, 0x7f, 0x8d, 0xeb,
	0xc4, 0x96, 0x27, 0x77, 0x55, 0x01, 0x7a, 0x1f, 0x4e, 0xe3, 0x7d, 0x6c, 0x5a, 0x78, 0xdb, 0x22,
	0x46, 0xd3, 0xf4, 0xf7, 0x0c, 0xbf, 0x83, 0x1b, 0xf1, 0x92, 0x7d, 0x2e, 0x30, 0x5e, 0xe8, 0xbf,
	0x64, 0xa1, 0x85, 0x65, 0xd3, 0xdf, 0xab, 0x33, 0xfd, 0x18, 0x6f, 0x1e, 0x67, 0x75, 0xa2, 0xb7,
	0x61, 0xba, 0x4d, 0x70, 0x27, 0xb9, 0x64, 0x5f, 0x08, 0xc0, 0x2b, 0x03, 0x36, 0x1f, 0x77, 0x92,
	0x0b, 0x56, 0x6e, 0x27, 0x45, 0x68, 0x17, 0xe6, 0xb8, 0xf1, 0xb6, 0xe9, 0x53, 0xb7, 0xe5, 0x61,
	0x3b, 0x42, 0xf8, 0x83, 0x40, 0xf8, 0xc7, 0x81, 0x08, 0xab, 0xa1, 0x6a, 0x0c, 0x33, 0xdb, 0xee,
	0x21, 0x47, 0xab, 0x00, 0xad, 0x46, 0x64, 0xff, 0x77, 0xc2, 0xfe, 0xc5, 0xbe, 0xf6, 0xef, 0x34,
	0x62, 0xa3, 0xa5, 0x56, 0xd8, 0x40, 0xef, 0x00, 0xb2, 0xb7, 0x09, 0x76, 0x92, 0x6b, 0xf2, 0xa5,
	0xb0, 0xf8, 0x6c, 0x5f, 0x8b, 0xeb, 0xb7, 0x08, 0x76, 0x92, 0x8b, 0x52, 0xe1, 0xb6, 0xd4, 0x55,
	0xf9, 0x9f, 0x02, 0xfc, 0x83, 0x8d, 0x69, 0xa3, 0x6d, 0x3a, 0x2d, 0x43, 0x20, 0xb9, 0xdb, 0xbb,
	0xa4, 0x41, 0x0d, 0x07, 0xdb, 0xc4, 0x8f, 0x10, 0xbf, 0x12, 0x88, 0xff, 0xd4, 0x1f, 0x51, 0x1a,
	0xe2, 0xc8, 0x9b, 0xdc, 0xcc, 0x06, 0xb3, 0x12, 0x3b, 0x70, 0x2e, 0xc4, 0x5a, 0xdf, 0xee, 0x39,
	0x24, 0x9e, 0xaf, 0x4d, 0x28, 0x8e, 0xd0, 0xbf, 0xce, 0x3d, 0xdf, 0x75, 0x42, 0x71, 0x7a, 0xbe,
	0x8a, 0x0c, 0xf9, 0x30, 0xef, 0x1f, 0xf8, 0x94, 0xd8, 0x46, 0xc7, 0x73, 0x3b, 0xc4, 0xa3, 0xa6,
	0x32, 0xc9, 0x3f, 0x0a, 0x98, 0xe7, 0xfb, 0xc2, 0xd4, 0xb9, 0xfa, 0xfd, 0x48, 0x3b, 0x46, 0x3b,
	0xe9, 0xf7, 0xee, 0x42, 0x3b, 0x30, 0xdb, 0xc0, 0x1d, 0xbc, 0x6d, 0x5a, 0x66, 0x02, 0xef, 0x1b,
	0x81, 0x77, 0xb5, 0x2f, 0xde, 0x92, 0xa2, 0x19, 0x63, 0xcd, 0x34, 0xba, 0xc5, 0x2c, 0xe8, 0xb4,
	0x2c, 0x77, 0x1b, 0x5b, 0xc9, 0xd5, 0xfb, 0xb8, 0x98, 0x23, 0xe8, 0xdc, 0xe1, 0x8a, 0xc9, 0xe5,
	0x9b, 0x6e, 0xa5, 0x85, 0xe8, 0xbf, 0x0a, 0x70, 0xae, 0xe3, 0x11, 0xcb, 0xc5, 0x4d, 0xa3, 0x61,
	0x61, 0xdf, 0xef, 0x60, 0xda, 0x36, 0x1a, 0xb8, 0xd1, 0x8e, 0x43, 0xc4, 0xff, 0x0a, 0xbc, 0x9b,
	0x7d, 0xf1, 0xee, 0x0b, 0x23, 0x4b, 0xa1, 0x8d, 0x25, 0x66, 0x22, 0x86, 0x3e, 0xdd, 0xe9, 0xd3,
	0xcf, 0x82, 0x54, 0x74, 0x68, 0xb9, 0x17, 0xa9, 0xd3, 0xfa, 0x49, 0x31, 0x47, 0x90, 0x0a, 0x4f,
	0x2b, 0x87, 0x48, 0x9d, 0xd3, 0x79, 0x3b, 0xab, 0x13, 0xfd, 0x3b, 0x9c, 0x89, 0x2f, 0x0c, 0xa1,
	0x6d, 0xb7, 0x99, 0x02, 0xff, 0x3f, 0x01, 0xfe, 0x62, 0xbe, 0xab, 0xc2, 0x2d, 0xa4, 0xd0, 0x6b,
	0x76, 0x66, 0x2f, 0x3b, 0xc0, 0x12, 0xd5, 0x37, 0x5b, 0x0e, 0xa6, 0x81, 0xa7, 0x40, 0x7f, 0x5a,
	0xcc, 0x71, 0x80, 0x85, 0xd1, 0x7a, 0xa4, 0xad, 0x1c, 0x60, 0xbb, 0x77, 0x17, 0x7a, 0x08, 0x65,
	0x8f, 0x3c, 0x22, 0x78, 0x3f, 0xde, 0xe4, 0xff, 0x17, 0x50, 0xcf, 0xf4, 0x85, 0xd2, 0x85, 0x52,
	0x8c, 0x30, 0xe5, 0x25, 0x24, 0xec, 0x0d, 0x6b, 0x13, 0xdc, 0x24, 0x5e, 0x64, 0xf7, 0xbb, 0x62,
	0x8e, 0x37, 0x6c, 0x95, 0xeb, 0x28, 0x6f, 0x58, 0x5b, 0x15, 0x30, 0x77, 0x19, 0xd7, 0x50, 0xaf,
	0xda, 0xf7, 0x79, 0xdc, 0x5d, 0x11, 0x4a, 0x8a, 0xbb, 0x24, 0x21, 0x61, 0x74, 0xc2, 0xc6, 0xa6,
	0x63, 0xc8, 0xa7, 0xbd, 0x23, 0x18, 0x4f, 0x04, 0xf2, 0x43, 0x31, 0x07, 0x9d, 0x58, 0xc7, 0xa6,
	0x23, 0x5e, 0x78, 0x49, 0x98, 0x14, 0x3a, 0x61, 0x67, 0xf4, 0x21, 0x0a, 0x35, 0x1c, 0x3c, 0xce,
	0xc2, 0xfd, 0x31, 0xcf, 0xb6, 0x2f, 0x06, 0x8f, 0x33, 0x60, 0x4f, 0xe2, 0xde, 0x5d, 0x2c, 0x18,
	0xef, 0x04, 0x96, 0x65, 0x50, 0x4f, 0x65, 0x00, 0x3f, 0x15, 0x73, 0x04, 0xe3, 0xdb, 0x81, 0x65,
	0x71, 0x76, 0xa8, 0x04, 0xe3, 0x9d, 0x94, 0xec, 0x56, 0x09, 0x8e, 0xdb, 0xc4, 0xf7, 0x71, 0x8b,
	0x68, 0x9f, 0xcf, 0xc1, 0x24, 0x27, 0x5a, 0x3a, 0xf1, 0x3b, 0xae, 0xe3, 0x93, 0x41, 0xfc, 0xf0,
	0x65, 0x18, 0xe1, 0x2c, 0x4f, 0x72, 0x43, 0x6d, 0x30, 0x37, 0x5c, 0x1d, 0xd2, 0x85, 0x0a, 0xe7,
	0x38, 0x3d, 0x59, 0xa1, 0x80, 0x0e, 0x69, 0xe1, 0x0b, 0x87, 0xa5, 0x85, 0x42, 0x9d, 0x73, 0x9c,
	0xac, 0x4e, 0xd4, 0x84, 0xd9, 0x24, 0x31, 0x94, 0x98, 0x92, 0x19, 0x3e, 0x97, 0x9b, 0x19, 0x46,
	0x60, 0x88, 0x76, 0x49, 0xd9, 0x0d, 0x88, 0xb8, 0xa1, 0x04, 0x90, 0xe4, 0xf0, 0x99, 0x5c, 0xe4,
	0x30, 0x32, 0x3e, 0xb5, 0x9b, 0x90, 0xb0, 0xe8, 0x97, 0x41, 0x0f, 0x25, 0x8c, 0xe4, 0x87, 0x2f,
	0x1e, 0x9a, 0x1f, 0x46, 0x90, 0x35, 0x9c, 0xd9, 0xcb, 0x4e, 0xa4, 0xca, 0x10, 0x25, 0xe6, 0x17,
	0x79, 0xe8, 0x41, 0x4c, 0x11, 0x23, 0xa4, 0x4a, 0x3b, 0x25, 0x43, 0x36, 0x9c, 0xec, 0x22, 0x89,
	0x12, 0x44, 0xb2, 0xc4, 0x6b, 0x87, 0x61, 0x89, 0x11, 0xd2, 0x89, 0x76, 0xaf, 0x0e, 0x74, 0x17,
	0xc6, 0x39, 0x4f, 0x94, 0x10, 0x92, 0x28, 0x3e, 0x35, 0x90, 0x28, 0x46, 0x76, 0xa1, 0x15, 0xb5,
	0xd8, 0xeb, 0x9f, 0xa0, 0x8a, 0xd2, 0xe8, 0x97, 0x79, 0x52, 0x0e, 0x85, 0x2b, 0x46, 0xb6, 0xa7,
	0x15, 0xb2, 0x28, 0x21, 0x3e, 0x2e, 0xc0, 0x93, 0xfd, 0xd9, 0xa2, 0x04, 0x95, 0x74, 0xf1, 0x9f,
	0x8f, 0x48, 0x17, 0x23, 0x1f, 0xce, 0x67, 0xf3, 0xc5, 0xf4, 0xac, 0x25, 0xe5, 0x91, 0x0e, 0x7c,
	0x9d, 0x7b, 0xd6, 0x82, 0xdd, 0xa4, 0x66, 0xad, 0x0a, 0xd1, 0x3e, 0xd4, 0x7a, 0x71, 0x46, 0x89,
	0x24, 0x49, 0xe3, 0x8d, 0x43, 0x92, 0xc6, 0x08, 0xb0, 0xea, 0x67, 0xf4, 0x21, 0x13, 0x4e, 0xa4,
	0x68, 0xa3, 0x84, 0xfc, 0x26, 0x4f, 0xc2, 0x92, 0xe4, 0x8d, 0x11, 0xdc, 0x6c, 0xa3, 0x87, 0x9c,
	0x45, 0xa5, 0x24, 0x73, 0x94, 0x48, 0x92, 0x3a, 0x3e, 0x97, 0x9b, 0x3a, 0xc6, 0x51, 0xa9, 0xd5,
	0x25, 0x45, 0xff, 0x5d, 0x80, 0xf3, 0xd9, 0xe4, 0x51, 0x42, 0x4a, 0xf6, 0xf8, 0xf2, 0x51, 0xd8,
	0x63, 0x84, 0x7e, 0xa6, 0xd3, 0x6f, 0x40, 0x82, 0xc3, 0x25, 0xf9, 0xa3, 0x74, 0xe2, 0x93, 0xc3,
	0x70, 0x38, 0x95, 0x23, 0xc6, 0x51, 0xcc, 0xce, 0xec, 0x45, 0xff, 0x51, 0x80, 0xb3, 0x59, 0x1c,
	0x52, 0x3a, 0x20, 0x49, 0xe4, 0x4b, 0x87, 0x27, 0x91, 0x91, 0x07, 0xa7, 0xec, 0xec, 0x6e, 0x76,
	0xa6, 0x7b, 0xd1, 0x48, 0x89, 0xfe, 0x69, 0x2e, 0x22, 0xd3, 0x45, 0x16, 0xe3, 0x33, 0x6d, 0x67,
	0xf4, 0xa1, 0xb7, 0xa0, 0x12, 0x33, 0x49, 0x89, 0x26, 0xa9, 0xe4, 0x95, 0x7c, 0x54, 0x32, 0x02,
	0x29, 0x7b, 0x49, 0x11, 0x7b, 0xf4, 0x22, 0x32, 0x29, 0x4d, 0x7f, 0x97, 0x87, 0xf6, 0x85, 0x6c,
	0x32, 0x7e, 0xf4, 0xda, 0x09, 0x09, 0x73, 0x3a, 0xe6, 0x93, 0xd2, 0xf2, 0xf7, 0x79, 0x9c, 0x8e,
	0x08, 0x65, 0xec, 0x34, 0x49, 0x8a, 0x44, 0x2a, 0xd3, 0x8b, 0x52, 0x4a, 0x9c, 0x1f, 0xf2, 0xa5,
	0x32, 0x5d, 0xbc, 0x31, 0xe6, 0x22, 0x76, 0x56, 0x27, 0xaf, 0x8e, 0xf5, 0x62, 0x95, 0x12, 0xfa,
	0xc7, 0x3c, 0xa7, 0xa0, 0x9b, 0x56, 0xc6, 0xa7, 0x00, 0x67, 0xf4, 0xb1, 0xa0, 0x9d, 0x20, 0x96,
	0x12, 0xf0, 0xa7, 0x3c, 0x89, 0xaa, 0xc2, 0x2c, 0xe3, 0xa0, 0xbd, 0x93, 0x16, 0xa2, 0x0e, 0x54,
	0x03, 0x67, 0xcf, 0x71, 0x1f, 0x39, 0x21, 0x71, 0x55, 0xa2, 0xda, 0x06, 0xc7, 0xb9, 0xde, 0x17,
	0xe7, 0x81, 0xd0, 0x96, 0x5c, 0x55, 0x01, 0x9b, 0x0b, 0x7a, 0xf6, 0xa0, 0x77, 0x01, 0x91, 0xc7,
	0x0d, 0xd2, 0xa1, 0xa6, 0xeb, 0x28, 0xe1, 0x6c, 0x23, 0xc7, 0x9c, 0x56, 0x42, 0x3d, 0x75, 0x4e,
	0x24, 0x2d, 0x54, 0xf9, 0xb2, 0x06, 0x23, 0x9c, 0xd4, 0xa2, 0x79, 0x18, 0x13, 0x5c, 0x56, 0x92,
	0xe4, 0x92, 0x7e, 0x9c, 0xb7, 0xd7, 0x9a, 0x1a, 0xc0, 0x58, 0x58, 0x14, 0xd5, 0x5a, 0x50, 0xcd,
	0xaa, 0x63, 0xa2, 0xbb, 0x30, 0xa1, 0xd2, 0xe1, 0xaa, 0x60, 0xbf, 0x97, 0xf2, 0xb2, 0x5f, 0x7d,
	0x5c, 0x61, 0xbb, 0xda, 0x29, 0x98, 0xcf, 0x64, 0xc6, 0xda, 0x0c, 0x4c, 0x77, 0x15, 0x37, 0xb5,
	0x77, 0x00, 0x75, 0xf3, 0x5a, 0xb4, 0x0a, 0xe3, 0x0a, 0x4f, 0x96, 0x3e, 0x3d, 0x95, 0x97, 0x1d,
	0x43, 0xcc, 0x89, 0xb5, 0x32, 0x4c, 0x26, 0x6a, 0x9e, 0xda, 0x7b, 0x30, 0x95, 0xe4, 0xb9, 0x68,
	0x0e, 0x46, 0x05, 0xcf, 0x95, 0x4b, 0x28, 0x5b, 0xe8, 0x0e, 0x3c, 0x11, 0x38, 0x0a, 0xdf, 0x0d,
	0x88, 0x41, 0x5d, 0xc3, 0x0b, 0x1c, 0x87, 0x45, 0x6e, 0xd3, 0x31, 0x76, 0x3d, 0x52, 0x65, 0x8f,
	0xf1, 0x98, 0x7e, 0x5a, 0x19, 0xb8, 0x1c, 0x90, 0x2d, 0x57, 0x17, 0xa3, 0xd6, 0x9c, 0xd7, 0x3c,
	0xa2, 0xdd, 0x84, 0xf9, 0xcc, 0x9a, 0x28, 0x3a, 0x0d, 0xa5, 0xa6, 0xe9, 0x91, 0x06, 0x75, 0xbd,
	0x03, 0xe9, 0x40, 0x2c, 0xd0, 0x3e, 0x80, 0x5a, 0x36, 0x5d, 0x46, 0x4f, 0x41, 0x39, 0xf6, 0x6f,
	0xfb, 0x80, 0x12, 0x5f, 0xa6, 0x4a, 0x53, 0x91, 0xf8, 0x16, 0x93, 0xa2, 0x17, 0xa1, 0x1a, 0xd9,
	0x34, 0x9a, 0x2e, 0xf1, 0x0d, 0xc7, 0xa5, 0x06, 0x79, 0x6c, 0xfa, 0x54, 0xce, 0xe0, 0x44, 0xd4,
	0xbf, 0xec, 0x12, 0x7f, 0xc3, 0xa5, 0x2b, 0xac, 0x53, 0x7b, 0x0e, 0xca, 0xa9, 0xea, 0xea, 0x00,
	0x87, 0x7f, 0x53, 0x80, 0x4a, 0x9a, 0x6c, 0xa3, 0x7f, 0x85, 0x99, 0x98, 0xb8, 0xf3, 0x30, 0x63,
	0x3a, 0x3b, 0xae, 0xdc, 0xd6, 0x7c, 0xc4, 0xfd, 0xb6, 0x69, 0x91, 0x35, 0x67, 0xc7, 0x8d, 0x69,
	0x7b, 0x28, 0x39, 0xfa, 0xe4, 0xe6, 0x60, 0xb6, 0x57, 0x61, 0x57, 0xfb, 0xa6, 0x00, 0x27, 0x7a,
	0x72, 0x79, 0xf4, 0x3a, 0xaf, 0x58, 0x28, 0x19, 0x82, 0x9c, 0xc3, 0xe5, 0x43, 0xe4, 0x05, 0x93,
	0x89, 0x6c, 0xe0, 0x97, 0x3b, 0x65, 0xe3, 0x50, 0x8a, 0xca, 0xc8, 0xda, 0x04, 0x40, 0x9c, 0x2a,
	0x68, 0x1f, 0x0d, 0x43, 0x25, 0x5d, 0x10, 0x46, 0x9b, 0x70, 0x6c, 0xcf, 0x74, 0x44, 0xdc, 0x98,
	0xba, 0xf6, 0xca, 0xa1, 0xaa, 0xc9, 0xb1, 0xe0, 0xae, 0xe9, 0x34, 0x75, 0x6e, 0x08, 0x9d, 0x83,
	0x71, 0x25, 0x1f, 0xa8, 0x0e, 0x9f, 0x2f, 0x5e, 0x2a, 0xe9, 0xe0, 0x46, 0xb4, 0x5d, 0xfb, 0xcf,
	0x02, 0x4c, 0x26, 0x14, 0xd1, 0x13, 0x70, 0x66, 0xf1, 0xde, 0x3d, 0x63, 0xfd, 0xd6, 0xca, 0xe2,
	0x46, 0xdd, 0x58, 0xdb, 0x58, 0xba, 0xf7, 0x60, 0x79, 0xc5, 0x58, 0xdc, 0xda, 0xd2, 0xd7, 0x6e,
	0x3d, 0xd8, 0x5a, 0xa9, 0x57, 0x86, 0xd0, 0x65, 0xb8, 0xd8, 0x77, 0x88, 0x71, 0x7b, 0x53, 0x37,
	0xea, 0x9b, 0xeb, 0x2b, 0x95, 0x02, 0xd2, 0xe0, 0x2c, 0xfb, 0xd5, 0xc7, 0xde, 0xb0, 0xf6, 0x16,
	0x4c, 0x77, 0xe5, 0x3b, 0x68, 0x05, 0x20, 0xce, 0x9e, 0xe4, 0x9e, 0x5e, 0xcc, 0xb9, 0x22, 0xa5,
	0x28, 0x53, 0xd2, 0x5a, 0x70, 0x6e, 0x40, 0x15, 0x1c, 0x2d, 0xc0, 0x4c, 0x07, 0x7b, 0xd4, 0xc4,
	0x96, 0x9a, 0x3c, 0xc9, 0x7b, 0x34, 0x2d, 0xbb, 0x62, 0x3d, 0x34, 0x0b, 0x23, 0x96, 0x69, 0x9b,
	0xe2, 0x24, 0x8f, 0xe8, 0xa2, 0xa1, 0x2d, 0xc1, 0xf9, 0x41, 0xf9, 0x53, 0x7a, 0x3b, 0x0a, 0x5d,
	0xdb, 0x71, 0x5d, 0x1e, 0x0a, 0xb5, 0xc2, 0xdb, 0xa5, 0x54, 0x48, 0x29, 0x85, 0xcb, 0x97, 0xa0,
	0xf6, 0xd1, 0xf2, 0xb1, 0xfc, 0x21, 0xff, 0xf2, 0x71, 0x1b, 0xa5, 0x28, 0xe5, 0xd2, 0xe6, 0xe1,
	0x64, 0x46, 0x7d, 0x5d, 0xfb, 0x4b, 0x01, 0xaa, 0x59, 0x69, 0x14, 0x7a, 0x0c, 0xd3, 0x5d, 0x29,
	0x1a, 0x9f, 0xef, 0xf8, 0xb5, 0xbb, 0x47, 0x4a, 0xcc, 0xba, 0x3a, 0x18, 0x95, 0x3b, 0xd0, 0x2b,
	0xe9, 0x64, 0xad, 0xb6, 0x04, 0x27, 0x7a, 0x0e, 0x45, 0x15, 0x28, 0xee, 0x91, 0x30, 0x3c, 0xb2,
	0x9f, 0x6c, 0x23, 0xf7, 0xb1, 0x15, 0x88, 0xbb, 0x5c, 0xd2, 0x45, 0xe3, 0xe5, 0xe1, 0x97, 0x0a,
	0xda, 0x09, 0x98, 0xe9, 0x51, 0xe6, 0xd7, 0x08, 0xcc, 0xf6, 0xca, 0xe2, 0xd0, 0x3a, 0x4c, 0xa8,
	0x59, 0x9c, 0x5c, 0xee, 0xa7, 0xf3, 0xa7, 0x83, 0x09, 0x75, 0xf6, 0x2a, 0x77, 0x55, 0xff, 0xd9,
	0xab, 0xdc, 0x9d, 0xd7, 0xb1, 0x57, 0x59, 0xc9, 0x13, 0x73, 0xbd, 0xca, 0x8a, 0x15, 0x88, 0x73,
	0x42, 0xed, 0x2c, 0x9c, 0xee, 0xf7, 0x09, 0x40, 0x3b, 0x07, 0x67, 0xfa, 0x26, 0x79, 0x9a, 0x01,
	0xf3, 0x99, 0x15, 0x7c, 0x74, 0x05, 0x50, 0x78, 0xc7, 0xe2, 0xfc, 0x4e, 0xee, 0x45, 0x45, 0xf6,
	0x44, 0x5a, 0x19, 0x37, 0xec, 0x15, 0xa8, 0x65, 0x67, 0x78, 0xe8, 0x0c, 0x40, 0xc2, 0x32, 0xbb,
	0x5a, 0xa5, 0x46, 0x38, 0x4e, 0xfb, 0xb0, 0x10, 0x6b, 0xf7, 0xa8, 0xe2, 0xa7, 0xb5, 0x0b, 0x09,
	0x6d, 0x35, 0x44, 0x28, 0xe9, 0xa1, 0x3c, 0x37, 0x61, 0x88, 0x88, 0xcd, 0xc6, 0x13, 0x28, 0xaa,
	0x13, 0x78, 0x15, 0x4e, 0xf5, 0xc9, 0x10, 0xd9, 0x45, 0x57, 0x8d, 0xcb, 0xe8, 0x60, 0x47, 0x23,
	0xb5, 0x37, 0xe1, 0x64, 0xc6, 0xb7, 0x82, 0x41, 0xfe, 0xa7, 0x4c, 0x0b, 0xbf, 0x55, 0xd3, 0x3e,
	0x54, 0xb3, 0xd2, 0x47, 0xf4, 0x10, 0x2a, 0xe9, 0xd4, 0x54, 0x5e, 0xe5, 0x2b, 0x87, 0xc9, 0x47,
	0xf5, 0x72, 0x2a, 0x09, 0xd5, 0x2a, 0x30, 0x95, 0xfc, 0x20, 0xa1, 0xfd, 0x0b, 0x94, 0x53, 0x79,
	0x25, 0x3b, 0x39, 0x62, 0x66, 0xb2, 0x28, 0xdc, 0x70, 0x03, 0x87, 0xf2, 0x19, 0x8e, 0xe8, 0x15,
	0xde, 0x23, 0x38, 0xed, 0x12, 0x93, 0x6b, 0x97, 0x61, 0x32, 0xf1, 0x2d, 0x82, 0xd1, 0x71, 0x91,
	0xd4, 0xc4, 0x74, 0x9c, 0xb7, 0xd7, 0x9a, 0x5a, 0x1d, 0xa6, 0x92, 0x99, 0x26, 0x5a, 0x84, 0x51,
	0x91, 0x69, 0xe6, 0xba, 0xc1, 0xe2, 0x8f, 0x2d, 0xa4, 0x09, 0xa9, 0xa8, 0x3d, 0x03, 0x53, 0xc9,
	0xaf, 0x16, 0xfd, 0x3c, 0xf8, 0xaa, 0x00, 0xe5, 0x54, 0x4a, 0x8a, 0x5e, 0x85, 0x11, 0x96, 0x92,
	0x1e, 0xc8, 0x25, 0xbe, 0x94, 0xc3, 0x05, 0x11, 0x0a, 0x85, 0x1a, 0x7a, 0x07, 0xa6, 0xfd, 0x36,
	0xf6, 0x48, 0xd3, 0x78, 0x2f, 0x20, 0xde, 0x81, 0x41, 0xc9, 0x63, 0xca, 0x1f, 0xfe, 0x41, 0xa5,
	0x52, 0x61, 0xab, 0xce, 0x75, 0x5f, 0x67, 0xaa, 0x5b, 0xe4, 0x31, 0xd5, 0xcb, 0x7e, 0x52, 0xa0,
	0xdd, 0x80, 0x6a, 0xd6, 0x17, 0x93, 0x7e, 0x53, 0x7d, 0x9b, 0x45, 0x87, 0xac, 0xbc, 0xf7, 0x55,
	0x38, 0x2e, 0x93, 0x5d, 0xb9, 0xf0, 0x4f, 0x0e, 0x28, 0x36, 0x09, 0xf5, 0x50, 0x49, 0x7b, 0x1e,
	0x4e, 0x66, 0x7c, 0x4d, 0xe9, 0xe7, 0xd2, 0x5b, 0x50, 0xcd, 0x4a, 0x96, 0x7f, 0xb6, 0x47, 0xcf,
	0x42, 0x25, 0xfd, 0xc5, 0xa5, 0x9f, 0x2b, 0x07, 0x30, 0xdd, 0x95, 0x46, 0xa3, 0x97, 0x60, 0x84,
	0xf7, 0x4b, 0x0f, 0xb4, 0xc1, 0xbb, 0xa7, 0x0b, 0x05, 0x74, 0x39, 0xeb, 0x0c, 0x94, 0xba, 0xf7,
	0xb3, 0x0a, 0x73, 0xbd, 0x33, 0x6b, 0xf6, 0x0c, 0x75, 0xe5, 0xc1, 0xda, 0xb7, 0x00, 0x10, 0xe7,
	0x75, 0xe8, 0x01, 0x8c, 0x53, 0x0f, 0x3b, 0x3e, 0x6e, 0xb0, 0x51, 0xf2, 0xcc, 0x5e, 0xcf, 0x99,
	0x15, 0x32, 0xa7, 0x43, 0x55, 0x5d, 0xb5, 0x83, 0xde, 0x84, 0x4a, 0xe0, 0xf0, 0x72, 0x19, 0x69,
	0xca, 0x72, 0x88, 0x3c, 0xc3, 0x0b, 0xb9, 0x6d, 0xf3, 0x9f, 0x7a, 0x39, 0xb2, 0x23, 0x04, 0x68,
	0x1b, 0x4e, 0x28, 0x79, 0x2c, 0x23, 0xf4, 0xd2, 0x7e, 0xf1, 0x50, 0x7f, 0x09, 0x14, 0xda, 0x9f,
	0x89, 0x13, 0x5b, 0xd3, 0x69, 0x49, 0x8c, 0xa7, 0xa1, 0x22, 0xbf, 0xf6, 0x44, 0xc9, 0x41, 0xf5,
	0x18, 0xcf, 0x17, 0xe4, 0x57, 0xa0, 0x28, 0x81, 0xac, 0xfd, 0x75, 0x18, 0xc6, 0x95, 0x65, 0x40,
	0x35, 0x18, 0x63, 0x91, 0xc4, 0x32, 0x1d, 0x52, 0x1d, 0xe5, 0x87, 0x24, 0x6a, 0x33, 0xb3, 0xca,
	0x22, 0x19, 0xf4, 0xa0, 0x13, 0x86, 0xfa, 0xb2, 0x22, 0xdf, 0x3a, 0xe8, 0x74, 0x0d, 0x55, 0xa2,
	0xbe, 0x3a, 0x94, 0xbf, 0x0d, 0x57, 0x61, 0x96, 0xba, 0x14, 0x5b, 0x46, 0x33, 0xf0, 0xb0, 0x1c,
	0xed, 0xb8, 0x3e, 0x5f, 0x8f, 0xa2, 0x8e, 0x78, 0xdf, 0xb2, 0xec, 0xda, 0x60, 0x3d, 0x48, 0x87,
	0xb2, 0xd0, 0x68, 0x74, 0x02, 0x39, 0xf8, 0x78, 0x8e, 0x9c, 0x6b, 0x93, 0x9f, 0x24, 0x6c, 0xad,
	0x39, 0xf4, 0x85, 0xe7, 0xf5, 0x49, 0x6e, 0x62, 0xa9, 0x13, 0x08, 0x9b, 0xea, 0xe5, 0x38, 0x96,
	0xb8, 0x1c, 0xe8, 0x36, 0x8c, 0xca, 0x2d, 0x1a, 0x39, 0xd2, 0x11, 0x90, 0xda, 0xb5, 0xbf, 0x0d,
	0xc3, 0xa8, 0xdc, 0x20, 0x04, 0xc7, 0x94, 0x87, 0x92, 0xff, 0x46, 0x53, 0x30, 0x6c, 0x32, 0x08,
	0x36, 0xeb, 0x61, 0xb3, 0xc9, 0xde, 0x70, 0x9f, 0x62, 0x1a, 0xb1, 0x43, 0xde, 0x40, 0xa7, 0xa0,
	0x64, 0xb9, 0x8d, 0x3d, 0xb1, 0xa2, 0x45, 0xb1, 0x41, 0x4c, 0xc0, 0x97, 0x72, 0x5d, 0x76, 0xf2,
	0x54, 0x7a, 0x34, 0xc7, 0xdf, 0x92, 0x28, 0xce, 0xde, 0x73, 0x1b, 0x7b, 0x3c, 0x9b, 0xe6, 0xe6,
	0x78, 0x16, 0xbd, 0x01, 0x93, 0xdc, 0x9c, 0xfb, 0xc8, 0x21, 0x1e, 0x5b, 0x98, 0xc3, 0xaf, 0xf2,
	0x38, 0x33, 0xb0, 0xc9, 0xf4, 0xd7, 0x9a, 0xc8, 0x84, 0x19, 0x71, 0x2a, 0xc5, 0x4a, 0x13, 0x8b,
	0xd8, 0xc4, 0xa1, 0xd5, 0x63, 0x7c, 0x55, 0x6f, 0xe6, 0x75, 0xb4, 0xce, 0x4c, 0xf0, 0x70, 0xb3,
	0x22, 0x0c, 0xe8, 0xd3, 0x7e, 0x5a, 0x54, 0xfb, 0xb6, 0x00, 0xd3, 0x5d, 0x03, 0x7f, 0x2e, 0x4b,
	0x61, 0x8b, 0xcf, 0x4b, 0x15, 0xea, 0xe2, 0x33, 0x41, 0xa8, 0xcd, 0x6e, 0x89, 0xe1, 0x04, 0xf6,
	0x36, 0xf1, 0xf8, 0x21, 0x9a, 0xd6, 0x81, 0x89, 0x36, 0xb8, 0x04, 0xd5, 0x61, 0xc2, 0x76, 0x1d,
	0x93, 0xba, 0x9e, 0xd8, 0x20, 0x71, 0x9a, 0x0e, 0xbf, 0x41, 0xe3, 0xd2, 0x0a, 0x6b, 0xd4, 0x1e,
	0xc2, 0x58, 0xd8, 0x31, 0x68, 0x7a, 0x57, 0x00, 0x99, 0x4d, 0xe2, 0x50, 0x93, 0x1e, 0x18, 0x6d,
	0xec, 0xb7, 0x8d, 0x86, 0xdb, 0x24, 0x92, 0xe2, 0x56, 0xc2, 0x9e, 0x55, 0xec, 0xb7, 0x97, 0xdc,
	0x26, 0xd1, 0x1e, 0xc6, 0x45, 0x9b, 0xa8, 0xac, 0x12, 0xce, 0x9f, 0x91, 0x6f, 0x69, 0x9f, 0xcf,
	0xff, 0x3e, 0xa6, 0x6d, 0x74, 0x11, 0xca, 0xbc, 0xd3, 0x37, 0xdf, 0x0f, 0x2b, 0x4f, 0xc3, 0xfc,
	0x30, 0x4f, 0x32, 0x71, 0xdd, 0x7c, 0x5f, 0x14, 0x9e, 0xb4, 0x3f, 0x15, 0x38, 0x47, 0x52, 0xea,
	0x1d, 0xf5, 0xd0, 0x6f, 0x59, 0x02, 0x2a, 0x0e, 0xfc, 0xdb, 0x85, 0x84, 0xfe, 0x02, 0x67, 0xe3,
	0x7c, 0x69, 0xc4, 0x6c, 0xf9, 0xc2, 0xbc, 0x01, 0xa5, 0x48, 0x3e, 0x68, 0x65, 0x66, 0x61, 0x44,
	0x75, 0x58, 0x34, 0x98, 0x54, 0x90, 0x3d, 0x11, 0x89, 0x44, 0x43, 0xfb, 0xec, 0x38, 0x94, 0xa2,
	0x4c, 0x1f, 0x6d, 0x86, 0x69, 0xae, 0xe2, 0xfa, 0xd5, 0x7c, 0x55, 0x02, 0xf1, 0x4b, 0xb8, 0xcd,
	0x6d, 0x70, 0xb7, 0x3f, 0x2c, 0x48, 0xf3, 0xdc, 0xef, 0x41, 0xb9, 0x37, 0xaa, 0x43, 0x09, 0x53,
	0xea, 0x99, 0xdb, 0x01, 0x25, 0xf2, 0x85, 0xba, 0x71, 0x18, 0xf8, 0xc5, 0x50, 0x59, 0x8f, 0xed,
	0xd4, 0x6c, 0x98, 0x4a, 0x76, 0xf6, 0x8c, 0x57, 0x77, 0xd4, 0xec, 0x75, 0xd0, 0xc7, 0xc7, 0x14,
	0xec, 0x1b, 0x4c, 0x51, 0x26, 0xbc, 0xb5, 0xcf, 0x86, 0x01, 0x62, 0x29, 0xc7, 0x0a, 0x2c, 0x8b,
	0x63, 0x8d, 0xe9, 0xfc, 0x37, 0xaa, 0xc2, 0xa8, 0x4f, 0x3d, 0xd3, 0x69, 0x89, 0x4b, 0xb9, 0x3a,
	0xa4, 0xcb, 0x36, 0xeb, 0x69, 0xba, 0x01, 0x7b, 0xe0, 0xd8, 0x2e, 0x15, 0x58, 0x8f, 0x68, 0xa3,
	0x59, 0x38, 0x66, 0xb9, 0x4e, 0x8b, 0x5f, 0xc4, 0xe2, 0xea, 0x90, 0xce, 0x5b, 0xa8, 0x06, 0xc7,
	0xb7, 0x5d, 0xd7, 0x22, 0xd8, 0xe1, 0xa1, 0x76, 0x6c, 0x75, 0x48, 0x0f, 0x05, 0xe8, 0x2e, 0x1c,
	0xb3, 0x4c, 0x9f, 0x56, 0x21, 0xcf, 0xc7, 0xae, 0x1e, 0x13, 0xba, 0x67, 0xf2, 0xbf, 0x6b, 0xe1,
	0x46, 0xd0, 0x2a, 0x14, 0x6d, 0xdc, 0xa9, 0x8e, 0xe7, 0xf9, 0x03, 0xac, 0x1e, 0xb6, 0xd6, 0x71,
	0x67, 0x75, 0x48, 0x67, 0x26, 0x6e, 0x8d, 0x40, 0x71, 0x1f, 0x5b, 0xb5, 0x37, 0xe5, 0xae, 0x44,
	0x50, 0xf1, 0x0e, 0x88, 0x73, 0x77, 0xf4, 0x1d, 0x78, 0x57, 0x16, 0xe1, 0x42, 0x64, 0xb4, 0x99,
	0x4c, 0x02, 0x6e, 0x1e, 0xc5, 0x7d, 0x35, 0x2b, 0xa8, 0xb9, 0x80, 0xba, 0x3b, 0x7b, 0x94, 0x44,
	0x7e, 0xa9, 0x43, 0xa5, 0x79, 0xf2, 0x1a, 0xad, 0x13, 0x8a, 0xd1, 0x69, 0x28, 0x45, 0x34, 0x4c,
	0x9e, 0xab, 0x58, 0x80, 0xce, 0xc3, 0xb8, 0x52, 0x45, 0x95, 0x85, 0x55, 0x55, 0x84, 0x2e, 0xc0,
	0x54, 0x74, 0x3b, 0xc2, 0xe0, 0xcf, 0xc8, 0xec, 0x64, 0x24, 0xe5, 0x49, 0xec, 0xaf, 0x87, 0x61,
	0x42, 0x2d, 0xab, 0xa0, 0xd7, 0xa1, 0x2c, 0xb9, 0x1e, 0x63, 0x2a, 0xd4, 0xb4, 0x49, 0xae, 0xc4,
	0x4e, 0xb2, 0x33, 0x66, 0xe5, 0x40, 0x9f, 0x14, 0x16, 0x96, 0x3a, 0xc1, 0x96, 0x69, 0x13, 0x64,
	0xc0, 0x5c, 0x68, 0xd2, 0x75, 0x28, 0x8b, 0xd9, 0x8c, 0x89, 0x99, 0x76, 0xb8, 0x62, 0x87, 0xb0,
	0x2c, 0xff, 0xee, 0x68, 0x29, 0xb2, 0x93, 0x02, 0xc0, 0x96, 0xe5, 0x36, 0x30, 0x25, 0x4d, 0x19,
	0xcd, 0x8b, 0x47, 0x04, 0x58, 0x0c, 0xed, 0x88, 0xf8, 0xbf, 0x0c, 0x13, 0xea, 0x28, 0xb6, 0x39,
	0xf1, 0xe2, 0xcb, 0xcd, 0x89, 0x97, 0x7e, 0x0e, 0x46, 0x3d, 0x82, 0x7d, 0xd7, 0x91, 0xcf, 0xb1,
	0x6c, 0x69, 0x1f, 0x00, 0xc4, 0x85, 0x24, 0x74, 0x01, 0xca, 0xbb, 0xfb, 0xb6, 0xe1, 0x06, 0xd4,
	0x70, 0x77, 0x0c, 0xff, 0xc0, 0x69, 0x48, 0x4b, 0x13, 0xbb, 0xfb, 0xf6, 0x66, 0x40, 0x37, 0x77,
	0xea, 0x07, 0x4e, 0x03, 0xad, 0xc1, 0x13, 0x6c, 0x98, 0x47, 0x38, 0x07, 0xdd, 0x71, 0x3d, 0x5b,
	0x54, 0x83, 0x88, 0x6f, 0xf8, 0x41, 0xa7, 0xe3, 0x7a, 0x94, 0x34, 0xe5, 0xfe, 0x9f, 0xdd, 0xdd,
	0xb7, 0xf5, 0x78, 0xdc, 0x92, 0x18, 0x56, 0x0f, 0x47, 0x69, 0x1f, 0x15, 0xa0, 0x9c, 0x2a, 0x30,
	0xf4, 0x8c, 0x92, 0x17, 0x60, 0xaa, 0x83, 0x3d, 0x6c, 0x13, 0x4a, 0x3c, 0xc1, 0x98, 0x45, 0x1e,
	0x34, 0x19, 0x49, 0x39, 0x5f, 0x3e, 0x07, 0xe3, 0x1e, 0xa1, 0x81, 0x27, 0x59, 0xb5, 0xe0, 0x16,
	0x20, 0x44, 0x7c, 0x40, 0x0d, 0xc6, 0x6c, 0xb7, 0x69, 0xee, 0x98, 0x9c, 0x5a, 0x30, 0x0b, 0x51,
	0xfb, 0xda, 0xbf, 0xc1, 0x74, 0xd7, 0x7f, 0x70, 0xa0, 0x1d, 0x38, 0xde, 0x70, 0x1d, 0x87, 0x34,
	0x28, 0xba, 0x3c, 0xf8, 0xcb, 0x5d, 0x98, 0x5f, 0xd5, 0xfa, 0x7f, 0x19, 0x4f, 0xfe, 0xcb, 0xc6,
	0xa5, 0xc2, 0xd5, 0xc2, 0xad, 0x33, 0x70, 0xca, 0xf5, 0x5a, 0x0b, 0xa1, 0xc6, 0x02, 0xd3, 0x58,
	0xc0, 0x1d, 0x73, 0x81, 0x6b, 0x6c, 0x8f, 0xf2, 0xff, 0xf7, 0xb8, 0xfe, 0xf7, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x68, 0x06, 0xdb, 0x62, 0x64, 0x32, 0x00, 0x00,
}
